Executing GRASP for file: instances/qbf020
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-99.0], size=[9], elements=[17, 5, 4, 14, 9, 1, 8, 0, 12]
(Iter. 3) BestSol = Solution: cost=[-102.0], size=[11], elements=[4, 2, 14, 12, 16, 9, 18, 0, 1, 8, 5]
(Iter. 17) BestSol = Solution: cost=[-120.0], size=[10], elements=[4, 14, 2, 12, 16, 9, 18, 0, 1, 8]
 maxVal = Solution: cost=[-120.0], size=[10], elements=[4, 14, 2, 12, 16, 9, 18, 0, 1, 8]
 construction = -102.0
Time = 1860.012 seg


Executing GRASP for file: instances/qbf040
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-276.0], size=[20], elements=[1, 24, 25, 37, 19, 34, 7, 28, 21, 31, 12, 10, 15, 9, 35, 33, 32, 11, 2, 29]
(Iter. 5) BestSol = Solution: cost=[-279.0], size=[19], elements=[1, 24, 22, 34, 7, 23, 36, 31, 9, 18, 26, 10, 4, 14, 15, 32, 6, 25, 11]
(Iter. 6) BestSol = Solution: cost=[-298.0], size=[21], elements=[24, 1, 22, 8, 3, 36, 14, 18, 23, 2, 31, 7, 19, 34, 9, 11, 21, 4, 15, 25, 39]
(Iter. 847) BestSol = Solution: cost=[-307.0], size=[19], elements=[37, 1, 24, 25, 19, 7, 2, 3, 14, 21, 18, 4, 11, 36, 31, 23, 34, 9, 15]
(Iter. 1435) BestSol = Solution: cost=[-313.0], size=[20], elements=[1, 24, 19, 25, 7, 8, 2, 3, 18, 21, 14, 4, 11, 36, 31, 23, 9, 34, 15, 33]
(Iter. 13048) BestSol = Solution: cost=[-328.0], size=[19], elements=[1, 24, 25, 19, 7, 2, 3, 14, 21, 18, 31, 36, 11, 4, 23, 34, 9, 15, 33]
 maxVal = Solution: cost=[-328.0], size=[19], elements=[1, 24, 25, 19, 7, 2, 3, 14, 21, 18, 31, 36, 11, 4, 23, 34, 9, 15, 33]
 construction = -304.0
Time = 1860.021 seg


Executing GRASP for file: instances/qbf060
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-437.0], size=[24], elements=[3, 28, 17, 40, 16, 34, 11, 49, 26, 38, 44, 41, 24, 45, 21, 4, 30, 46, 22, 27, 51, 29, 0, 33]
(Iter. 22) BestSol = Solution: cost=[-467.0], size=[29], elements=[13, 42, 44, 56, 14, 53, 17, 29, 51, 27, 43, 24, 31, 38, 34, 3, 49, 26, 4, 35, 59, 23, 41, 16, 55, 28, 11, 37, 45]
(Iter. 27) BestSol = Solution: cost=[-470.0], size=[26], elements=[13, 42, 44, 17, 53, 14, 51, 56, 29, 27, 43, 38, 24, 31, 34, 3, 49, 26, 4, 35, 59, 55, 12, 16, 41, 11]
(Iter. 35) BestSol = Solution: cost=[-480.0], size=[29], elements=[3, 28, 17, 16, 11, 42, 34, 40, 26, 38, 44, 49, 24, 41, 21, 51, 56, 4, 30, 29, 46, 22, 53, 55, 35, 59, 45, 23, 14]
(Iter. 1935) BestSol = Solution: cost=[-489.0], size=[27], elements=[13, 42, 44, 17, 28, 16, 38, 26, 11, 3, 55, 51, 56, 53, 27, 14, 43, 29, 49, 24, 34, 4, 30, 12, 35, 59, 37]
(Iter. 2099) BestSol = Solution: cost=[-490.0], size=[28], elements=[34, 28, 17, 3, 16, 11, 49, 26, 38, 44, 41, 24, 42, 21, 30, 4, 56, 51, 55, 35, 29, 53, 46, 22, 59, 23, 45, 14]
 maxVal = Solution: cost=[-490.0], size=[28], elements=[34, 28, 17, 3, 16, 11, 49, 26, 38, 44, 41, 24, 42, 21, 30, 4, 56, 51, 55, 35, 29, 53, 46, 22, 59, 23, 45, 14]
 construction = -489.0
Time = 1860.057 seg


Executing GRASP for file: instances/qbf080
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-725.0], size=[33], elements=[54, 3, 17, 42, 48, 7, 11, 6, 2, 31, 75, 18, 36, 23, 4, 37, 50, 8, 49, 69, 15, 60, 13, 73, 44, 34, 66, 47, 71, 24, 79, 76, 5]
(Iter. 3) BestSol = Solution: cost=[-736.0], size=[35], elements=[54, 3, 17, 42, 48, 6, 11, 7, 2, 18, 31, 75, 36, 23, 4, 19, 8, 13, 37, 60, 69, 61, 44, 49, 73, 71, 9, 66, 70, 24, 27, 76, 34, 74, 5]
(Iter. 5) BestSol = Solution: cost=[-777.0], size=[38], elements=[7, 33, 16, 73, 75, 31, 62, 48, 2, 64, 24, 76, 3, 9, 42, 43, 70, 58, 71, 54, 18, 37, 1, 13, 44, 60, 46, 22, 51, 49, 55, 57, 4, 69, 61, 36, 23, 79]
(Iter. 16) BestSol = Solution: cost=[-828.0], size=[36], elements=[64, 2, 62, 37, 48, 19, 58, 46, 31, 23, 36, 18, 47, 71, 75, 9, 42, 3, 54, 60, 73, 13, 1, 24, 43, 76, 22, 8, 44, 70, 51, 4, 49, 55, 74, 57]
(Iter. 117) BestSol = Solution: cost=[-829.0], size=[35], elements=[23, 48, 37, 2, 36, 31, 18, 54, 62, 58, 3, 42, 75, 19, 9, 71, 46, 64, 60, 69, 24, 76, 73, 13, 44, 7, 70, 1, 43, 74, 22, 51, 4, 49, 57]
(Iter. 506) BestSol = Solution: cost=[-832.0], size=[38], elements=[23, 48, 37, 2, 36, 31, 62, 18, 54, 58, 3, 42, 75, 19, 9, 46, 71, 64, 60, 69, 13, 73, 7, 24, 76, 44, 16, 22, 1, 43, 74, 49, 55, 61, 51, 4, 8, 57]
(Iter. 6645) BestSol = Solution: cost=[-837.0], size=[39], elements=[23, 48, 37, 60, 36, 18, 54, 31, 13, 2, 7, 3, 42, 75, 9, 73, 71, 24, 69, 44, 58, 46, 19, 64, 62, 76, 16, 22, 1, 43, 70, 74, 51, 57, 4, 49, 55, 61, 8]
(Iter. 8589) BestSol = Solution: cost=[-842.0], size=[38], elements=[48, 23, 37, 60, 36, 2, 18, 62, 31, 54, 3, 58, 19, 42, 9, 46, 71, 75, 13, 8, 73, 7, 44, 69, 76, 24, 64, 43, 22, 1, 70, 4, 49, 74, 51, 61, 55, 57]
(Iter. 103365) BestSol = Solution: cost=[-843.0], size=[37], elements=[48, 23, 37, 60, 36, 2, 18, 62, 19, 31, 54, 3, 58, 42, 9, 46, 71, 75, 13, 8, 73, 44, 69, 64, 24, 76, 7, 22, 43, 1, 55, 49, 4, 61, 74, 51, 70]
 maxVal = Solution: cost=[-843.0], size=[37], elements=[48, 23, 37, 60, 36, 2, 18, 62, 19, 31, 54, 3, 58, 42, 9, 46, 71, 75, 13, 8, 73, 44, 69, 64, 24, 76, 7, 22, 43, 1, 55, 49, 4, 61, 74, 51, 70]
 construction = -842.0
Time = 1860.033 seg


Executing GRASP for file: instances/qbf100
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-1041.0], size=[41], elements=[40, 23, 2, 27, 51, 68, 95, 22, 56, 31, 9, 74, 29, 7, 17, 90, 62, 37, 96, 14, 18, 73, 44, 10, 63, 59, 26, 70, 49, 78, 64, 43, 86, 91, 33, 93, 71, 57, 66, 80, 81]
(Iter. 4) BestSol = Solution: cost=[-1118.0], size=[44], elements=[61, 84, 2, 45, 13, 20, 12, 79, 94, 67, 92, 16, 85, 48, 10, 9, 69, 72, 71, 44, 91, 15, 58, 63, 96, 73, 21, 23, 62, 42, 6, 8, 33, 5, 55, 22, 14, 17, 29, 98, 50, 75, 28, 59]
(Iter. 5) BestSol = Solution: cost=[-1151.0], size=[46], elements=[58, 84, 40, 35, 85, 51, 73, 27, 2, 23, 16, 45, 34, 33, 19, 56, 29, 10, 18, 7, 42, 17, 25, 71, 69, 24, 28, 38, 64, 62, 90, 22, 63, 44, 72, 96, 67, 93, 91, 68, 57, 92, 20, 78, 86, 66]
(Iter. 39) BestSol = Solution: cost=[-1157.0], size=[44], elements=[40, 23, 2, 7, 69, 9, 10, 45, 21, 24, 71, 74, 38, 62, 33, 42, 80, 57, 22, 64, 51, 28, 50, 39, 14, 18, 17, 44, 85, 73, 63, 29, 34, 78, 56, 81, 89, 16, 19, 84, 88, 66, 3, 92]
(Iter. 56) BestSol = Solution: cost=[-1198.0], size=[46], elements=[11, 68, 43, 57, 56, 38, 22, 74, 26, 62, 78, 51, 64, 10, 86, 17, 33, 28, 91, 83, 69, 95, 23, 27, 94, 93, 67, 44, 24, 96, 90, 71, 7, 18, 14, 31, 63, 2, 29, 25, 34, 19, 72, 81, 40, 84]
(Iter. 187) BestSol = Solution: cost=[-1210.0], size=[44], elements=[68, 43, 11, 57, 56, 38, 22, 74, 51, 78, 62, 26, 23, 10, 64, 24, 95, 27, 33, 17, 86, 28, 69, 91, 93, 7, 81, 31, 14, 44, 18, 89, 96, 2, 29, 94, 90, 71, 34, 25, 72, 19, 83, 40]
(Iter. 546) BestSol = Solution: cost=[-1242.0], size=[46], elements=[11, 68, 57, 43, 56, 22, 38, 74, 26, 62, 78, 10, 64, 51, 23, 24, 95, 33, 27, 17, 28, 31, 69, 7, 81, 86, 91, 93, 14, 44, 18, 89, 96, 71, 90, 2, 29, 94, 34, 19, 25, 63, 83, 3, 49, 99]
(Iter. 1096) BestSol = Solution: cost=[-1244.0], size=[46], elements=[68, 11, 57, 43, 56, 22, 38, 74, 26, 62, 78, 10, 64, 51, 17, 86, 33, 28, 23, 91, 95, 69, 24, 27, 93, 7, 81, 31, 14, 44, 18, 89, 96, 3, 71, 19, 90, 25, 63, 29, 2, 34, 83, 99, 94, 84]
(Iter. 1341) BestSol = Solution: cost=[-1259.0], size=[47], elements=[84, 61, 2, 85, 44, 19, 18, 42, 17, 10, 7, 63, 25, 96, 51, 14, 29, 68, 16, 20, 73, 33, 34, 23, 45, 28, 62, 90, 71, 74, 78, 64, 22, 57, 69, 9, 38, 92, 50, 72, 86, 56, 91, 79, 67, 94, 24]
(Iter. 45651) BestSol = Solution: cost=[-1260.0], size=[47], elements=[84, 2, 61, 85, 44, 18, 19, 42, 17, 94, 10, 33, 73, 7, 45, 20, 96, 69, 23, 71, 16, 9, 92, 34, 63, 51, 29, 90, 25, 62, 78, 74, 64, 38, 72, 22, 57, 68, 14, 50, 56, 86, 28, 79, 67, 91, 81]
 maxVal = Solution: cost=[-1260.0], size=[47], elements=[84, 2, 61, 85, 44, 18, 19, 42, 17, 94, 10, 33, 73, 7, 45, 20, 96, 69, 23, 71, 16, 9, 92, 34, 63, 51, 29, 90, 25, 62, 78, 74, 64, 38, 72, 22, 57, 68, 14, 50, 56, 86, 28, 79, 67, 91, 81]
 construction = -1260.0
Time = 1860.012 seg


Executing GRASP for file: instances/qbf200
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-3509.0], size=[97], elements=[89, 5, 187, 154, 70, 155, 42, 19, 110, 31, 59, 121, 145, 169, 128, 125, 46, 4, 72, 51, 83, 171, 6, 66, 148, 99, 140, 49, 127, 69, 117, 80, 78, 28, 119, 196, 163, 134, 1, 86, 138, 106, 101, 175, 43, 195, 23, 137, 76, 157, 131, 45, 166, 103, 61, 108, 167, 30, 16, 21, 37, 129, 115, 123, 7, 104, 139, 186, 40, 25, 173, 156, 63, 54, 93, 33, 183, 198, 81, 180, 153, 174, 9, 94, 141, 114, 133, 73, 143, 193, 192, 85, 87, 136, 152, 159, 39]
(Iter. 3) BestSol = Solution: cost=[-3642.0], size=[91], elements=[172, 180, 31, 72, 92, 138, 196, 157, 77, 103, 83, 163, 34, 16, 150, 174, 185, 41, 87, 175, 101, 6, 4, 173, 154, 147, 56, 38, 140, 171, 51, 155, 145, 7, 110, 25, 21, 85, 69, 80, 131, 162, 84, 9, 86, 54, 30, 108, 68, 45, 106, 160, 81, 117, 195, 181, 125, 33, 153, 166, 23, 129, 115, 165, 176, 148, 63, 179, 119, 95, 58, 158, 19, 47, 199, 88, 50, 99, 12, 8, 53, 141, 73, 132, 193, 70, 67, 139, 198, 152, 93]
(Iter. 4) BestSol = Solution: cost=[-3681.0], size=[93], elements=[104, 68, 180, 172, 17, 63, 29, 50, 3, 111, 47, 54, 48, 157, 196, 0, 192, 24, 61, 165, 100, 114, 13, 174, 145, 133, 69, 179, 164, 167, 131, 12, 85, 7, 118, 81, 113, 52, 21, 30, 25, 67, 170, 16, 181, 101, 4, 23, 141, 108, 34, 155, 87, 121, 51, 150, 129, 39, 70, 185, 138, 126, 154, 53, 151, 158, 144, 123, 83, 110, 184, 45, 11, 147, 73, 92, 175, 31, 198, 195, 117, 177, 160, 148, 99, 26, 105, 19, 132, 140, 173, 82, 64]
(Iter. 9) BestSol = Solution: cost=[-3756.0], size=[89], elements=[68, 104, 180, 172, 17, 63, 61, 157, 138, 31, 83, 145, 72, 80, 7, 78, 131, 186, 191, 19, 86, 110, 155, 196, 133, 85, 108, 4, 174, 70, 21, 106, 95, 54, 101, 87, 69, 192, 51, 150, 45, 119, 81, 160, 167, 30, 179, 12, 117, 16, 141, 25, 147, 114, 23, 34, 73, 52, 185, 125, 129, 166, 100, 154, 181, 158, 153, 9, 33, 164, 103, 50, 29, 148, 92, 77, 47, 1, 13, 67, 175, 126, 41, 28, 8, 39, 169, 94, 113]
(Iter. 15) BestSol = Solution: cost=[-3782.0], size=[95], elements=[180, 172, 31, 72, 92, 196, 138, 157, 83, 77, 103, 89, 104, 184, 145, 63, 82, 7, 136, 51, 191, 131, 133, 167, 38, 113, 139, 17, 30, 25, 174, 85, 198, 69, 21, 87, 166, 56, 100, 148, 34, 108, 141, 155, 179, 70, 54, 129, 81, 84, 185, 95, 126, 192, 39, 4, 61, 169, 123, 110, 116, 106, 11, 18, 46, 117, 175, 125, 86, 45, 19, 154, 119, 164, 23, 80, 99, 195, 199, 43, 153, 181, 9, 73, 171, 12, 88, 29, 50, 160, 158, 53, 114, 147, 62]
(Iter. 21) BestSol = Solution: cost=[-3871.0], size=[94], elements=[68, 104, 180, 172, 138, 17, 61, 21, 31, 30, 51, 123, 167, 83, 145, 72, 169, 157, 4, 25, 77, 16, 54, 131, 155, 150, 80, 73, 160, 63, 129, 7, 87, 81, 124, 33, 106, 69, 85, 162, 174, 52, 119, 45, 179, 34, 86, 12, 141, 185, 9, 100, 117, 70, 114, 192, 181, 23, 29, 164, 50, 148, 171, 153, 137, 101, 19, 154, 99, 0, 166, 125, 158, 82, 46, 95, 111, 147, 110, 92, 47, 18, 196, 67, 190, 13, 126, 53, 28, 140, 198, 8, 175, 15]
(Iter. 81) BestSol = Solution: cost=[-3949.0], size=[86], elements=[184, 108, 66, 103, 141, 167, 61, 166, 67, 49, 23, 121, 4, 137, 46, 101, 99, 43, 145, 19, 155, 110, 31, 83, 34, 175, 196, 157, 13, 72, 69, 172, 85, 193, 45, 80, 195, 87, 174, 147, 138, 17, 106, 86, 119, 114, 154, 51, 94, 95, 70, 21, 54, 125, 30, 16, 25, 198, 131, 73, 117, 90, 37, 192, 44, 111, 129, 158, 134, 7, 84, 68, 160, 76, 162, 163, 150, 33, 181, 171, 9, 143, 140, 18, 122, 41]
(Iter. 549) BestSol = Solution: cost=[-3967.0], size=[91], elements=[184, 108, 66, 103, 141, 167, 61, 166, 67, 49, 23, 137, 4, 121, 101, 46, 99, 43, 19, 145, 155, 110, 196, 147, 157, 193, 72, 86, 94, 45, 51, 54, 187, 70, 95, 83, 85, 174, 138, 106, 80, 17, 119, 172, 34, 111, 114, 37, 87, 89, 198, 158, 25, 63, 30, 52, 131, 183, 162, 69, 28, 21, 148, 7, 81, 134, 11, 195, 132, 5, 93, 164, 154, 20, 112, 88, 18, 171, 156, 62, 31, 160, 192, 117, 127, 169, 125, 42, 199, 47, 9]
(Iter. 5135) BestSol = Solution: cost=[-3970.0], size=[91], elements=[184, 108, 66, 103, 61, 49, 166, 67, 167, 141, 23, 121, 137, 4, 46, 101, 99, 19, 145, 155, 43, 110, 93, 147, 193, 95, 196, 83, 54, 70, 51, 94, 157, 174, 85, 45, 63, 17, 86, 172, 138, 72, 80, 187, 119, 106, 183, 34, 89, 37, 25, 198, 87, 158, 111, 30, 114, 52, 131, 69, 28, 162, 81, 148, 134, 7, 132, 5, 195, 21, 11, 171, 20, 156, 154, 31, 18, 169, 160, 164, 125, 117, 112, 62, 192, 88, 199, 127, 47, 42, 190]
(Iter. 6058) BestSol = Solution: cost=[-4012.0], size=[94], elements=[5, 89, 187, 154, 155, 70, 42, 66, 171, 156, 72, 103, 31, 157, 195, 92, 110, 18, 199, 99, 173, 80, 145, 196, 137, 131, 69, 9, 193, 86, 101, 138, 141, 19, 192, 62, 166, 23, 164, 4, 183, 61, 119, 49, 148, 30, 179, 167, 117, 162, 127, 124, 28, 163, 132, 93, 54, 112, 51, 16, 147, 25, 21, 34, 174, 85, 52, 67, 114, 111, 17, 37, 20, 43, 106, 7, 121, 81, 184, 63, 94, 160, 45, 87, 198, 134, 36, 158, 95, 169, 116, 139, 88, 105]
(Iter. 6396) BestSol = Solution: cost=[-4020.0], size=[95], elements=[83, 172, 87, 61, 101, 95, 110, 145, 21, 174, 108, 85, 4, 19, 34, 141, 54, 155, 197, 11, 25, 124, 51, 147, 121, 126, 193, 70, 158, 94, 45, 67, 138, 185, 154, 140, 8, 99, 198, 86, 72, 46, 49, 30, 80, 157, 18, 84, 17, 111, 196, 23, 56, 166, 125, 184, 43, 106, 148, 69, 31, 119, 179, 90, 114, 13, 7, 117, 195, 175, 171, 162, 81, 181, 160, 52, 12, 122, 127, 192, 131, 76, 37, 152, 123, 143, 191, 9, 73, 77, 47, 15, 88, 153, 104]
 maxVal = Solution: cost=[-4020.0], size=[95], elements=[83, 172, 87, 61, 101, 95, 110, 145, 21, 174, 108, 85, 4, 19, 34, 141, 54, 155, 197, 11, 25, 124, 51, 147, 121, 126, 193, 70, 158, 94, 45, 67, 138, 185, 154, 140, 8, 99, 198, 86, 72, 46, 49, 30, 80, 157, 18, 84, 17, 111, 196, 23, 56, 166, 125, 184, 43, 106, 148, 69, 31, 119, 179, 90, 114, 13, 7, 117, 195, 175, 171, 162, 81, 181, 160, 52, 12, 122, 127, 192, 131, 76, 37, 152, 123, 143, 191, 9, 73, 77, 47, 15, 88, 153, 104]
 construction = -4020.0
Time = 1860.086 seg


Executing GRASP for file: instances/qbf400
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-9911.0], size=[175], elements=[172, 180, 332, 235, 247, 92, 72, 279, 138, 31, 367, 196, 41, 347, 331, 14, 246, 16, 352, 58, 224, 289, 278, 154, 384, 49, 185, 238, 34, 101, 376, 335, 328, 56, 221, 200, 175, 288, 206, 125, 325, 7, 306, 129, 211, 54, 70, 290, 108, 181, 21, 324, 174, 117, 391, 103, 250, 87, 387, 80, 366, 361, 349, 84, 208, 336, 50, 177, 230, 157, 99, 155, 307, 194, 380, 51, 25, 30, 226, 274, 323, 76, 371, 114, 251, 245, 240, 319, 293, 69, 357, 373, 389, 166, 393, 85, 271, 216, 100, 42, 354, 75, 385, 1, 62, 342, 15, 228, 236, 296, 81, 94, 8, 146, 97, 277, 82, 139, 192, 383, 215, 179, 141, 273, 110, 244, 83, 147, 65, 285, 95, 232, 193, 184, 137, 260, 28, 126, 183, 227, 304, 360, 63, 229, 198, 148, 66, 348, 378, 22, 107, 53, 286, 379, 57, 220, 168, 88, 253, 390, 364, 386, 281, 362, 309, 381, 153, 77, 163, 338, 113, 259, 6, 120, 89]
(Iter. 4) BestSol = Solution: cost=[-9974.0], size=[175], elements=[68, 104, 355, 140, 367, 366, 54, 187, 75, 277, 30, 358, 16, 324, 156, 382, 3, 99, 200, 299, 167, 101, 52, 243, 10, 373, 44, 245, 86, 252, 234, 309, 131, 289, 154, 326, 298, 362, 237, 193, 94, 25, 268, 278, 354, 388, 284, 347, 365, 190, 142, 103, 218, 300, 14, 307, 62, 335, 41, 316, 327, 328, 78, 155, 132, 276, 293, 139, 180, 291, 246, 19, 141, 70, 223, 18, 336, 239, 50, 9, 390, 399, 376, 381, 320, 349, 59, 129, 211, 28, 111, 125, 386, 4, 74, 241, 227, 361, 247, 338, 183, 123, 196, 72, 261, 208, 32, 150, 82, 209, 20, 351, 332, 279, 61, 110, 113, 364, 312, 126, 357, 148, 89, 134, 166, 304, 254, 174, 45, 124, 288, 215, 51, 49, 157, 114, 169, 5, 138, 216, 158, 92, 66, 77, 6, 240, 383, 119, 24, 160, 221, 107, 53, 290, 235, 306, 76, 137, 274, 296, 145, 339, 352, 63, 7, 47, 194, 314, 346, 333, 21, 31, 179, 170, 363]
(Iter. 5) BestSol = Solution: cost=[-10530.0], size=[182], elements=[277, 89, 49, 179, 354, 157, 103, 31, 30, 230, 364, 290, 349, 215, 327, 382, 336, 63, 4, 45, 137, 76, 224, 145, 375, 218, 352, 347, 398, 52, 355, 38, 288, 124, 80, 131, 208, 183, 28, 7, 70, 199, 81, 69, 72, 162, 312, 110, 299, 53, 16, 150, 132, 397, 190, 149, 86, 353, 171, 155, 254, 134, 5, 335, 260, 357, 9, 338, 78, 216, 1, 92, 365, 201, 306, 331, 156, 177, 19, 125, 17, 328, 389, 163, 289, 159, 154, 18, 221, 319, 99, 101, 187, 244, 332, 114, 272, 259, 292, 236, 158, 304, 214, 356, 56, 307, 196, 23, 119, 195, 85, 387, 82, 160, 166, 285, 339, 209, 227, 323, 348, 148, 386, 376, 245, 138, 297, 51, 104, 301, 247, 374, 219, 233, 316, 111, 153, 73, 318, 258, 239, 139, 66, 246, 24, 232, 296, 94, 6, 123, 383, 324, 229, 107, 340, 293, 278, 309, 240, 390, 174, 33, 75, 151, 88, 284, 310, 303, 350, 168, 381, 360, 34, 351, 193, 61, 393, 385, 378, 253, 152, 106]
(Iter. 47) BestSol = Solution: cost=[-10686.0], size=[184], elements=[108, 35, 289, 23, 141, 66, 167, 101, 92, 235, 54, 155, 162, 285, 137, 254, 208, 303, 269, 67, 236, 385, 84, 68, 151, 368, 371, 244, 49, 121, 4, 117, 90, 16, 212, 148, 380, 193, 352, 263, 64, 226, 232, 373, 152, 246, 327, 1, 201, 230, 324, 329, 18, 382, 80, 339, 9, 259, 359, 166, 52, 328, 300, 158, 62, 386, 342, 11, 168, 125, 97, 245, 100, 211, 119, 51, 61, 381, 114, 30, 350, 87, 323, 160, 25, 306, 156, 147, 250, 332, 366, 154, 354, 19, 93, 17, 312, 171, 159, 10, 48, 53, 265, 307, 240, 393, 378, 247, 227, 110, 187, 174, 95, 288, 304, 172, 183, 220, 165, 94, 99, 157, 65, 103, 15, 397, 56, 85, 260, 34, 195, 7, 177, 376, 360, 28, 111, 20, 296, 398, 190, 290, 69, 81, 179, 336, 325, 349, 309, 82, 205, 73, 47, 76, 192, 374, 21, 132, 249, 0, 338, 292, 364, 214, 86, 351, 88, 139, 219, 316, 45, 43, 387, 239, 272, 394, 390, 107, 146, 361, 310, 133, 91, 113]
(Iter. 104) BestSol = Solution: cost=[-10748.0], size=[195], elements=[91, 230, 87, 10, 316, 159, 386, 304, 211, 354, 154, 83, 288, 265, 92, 15, 296, 96, 32, 306, 323, 332, 273, 158, 30, 247, 124, 148, 95, 215, 103, 125, 17, 100, 342, 51, 167, 373, 134, 272, 97, 301, 397, 299, 56, 348, 145, 99, 147, 250, 383, 244, 16, 49, 110, 196, 157, 177, 378, 70, 121, 175, 44, 155, 328, 376, 166, 85, 18, 94, 156, 289, 54, 114, 201, 119, 48, 65, 352, 368, 339, 11, 395, 208, 387, 200, 187, 174, 80, 311, 366, 277, 240, 66, 333, 77, 379, 165, 171, 53, 228, 25, 21, 223, 327, 263, 140, 336, 153, 9, 293, 179, 309, 377, 193, 381, 274, 363, 195, 45, 73, 248, 324, 22, 325, 320, 242, 107, 227, 300, 245, 281, 197, 3, 170, 143, 2, 338, 160, 284, 164, 192, 258, 122, 236, 146, 398, 380, 127, 1, 31, 190, 47, 84, 239, 246, 162, 152, 234, 163, 4, 101, 43, 111, 372, 173, 224, 67, 345, 6, 117, 349, 358, 251, 313, 63, 347, 38, 285, 364, 183, 243, 394, 41, 34, 260, 361, 237, 221, 19, 168, 229, 350, 351, 220]
(Iter. 164) BestSol = Solution: cost=[-11028.0], size=[186], elements=[159, 108, 341, 167, 184, 240, 231, 289, 293, 66, 373, 205, 24, 279, 327, 178, 389, 235, 162, 229, 53, 130, 307, 155, 383, 253, 368, 179, 195, 339, 377, 11, 35, 393, 84, 385, 371, 378, 386, 304, 244, 168, 1, 100, 157, 211, 22, 288, 17, 366, 48, 81, 80, 58, 91, 119, 398, 10, 354, 236, 165, 360, 230, 15, 154, 125, 92, 56, 16, 352, 323, 49, 247, 158, 263, 250, 361, 144, 226, 121, 281, 274, 381, 245, 114, 300, 136, 43, 387, 257, 265, 34, 28, 239, 166, 296, 83, 82, 148, 25, 85, 328, 325, 87, 51, 7, 30, 342, 107, 177, 395, 273, 303, 396, 201, 70, 241, 23, 95, 111, 380, 18, 376, 370, 73, 246, 332, 20, 258, 47, 251, 172, 306, 329, 348, 200, 290, 54, 238, 277, 259, 3, 187, 188, 94, 102, 198, 309, 191, 133, 394, 170, 391, 301, 21, 65, 64, 88, 139, 113, 9, 320, 164, 192, 356, 2, 183, 68, 297, 324, 174, 147, 63, 97, 233, 227, 156, 74, 193, 228, 310, 126, 132, 89, 285, 134]
 maxVal = Solution: cost=[-11028.0], size=[186], elements=[159, 108, 341, 167, 184, 240, 231, 289, 293, 66, 373, 205, 24, 279, 327, 178, 389, 235, 162, 229, 53, 130, 307, 155, 383, 253, 368, 179, 195, 339, 377, 11, 35, 393, 84, 385, 371, 378, 386, 304, 244, 168, 1, 100, 157, 211, 22, 288, 17, 366, 48, 81, 80, 58, 91, 119, 398, 10, 354, 236, 165, 360, 230, 15, 154, 125, 92, 56, 16, 352, 323, 49, 247, 158, 263, 250, 361, 144, 226, 121, 281, 274, 381, 245, 114, 300, 136, 43, 387, 257, 265, 34, 28, 239, 166, 296, 83, 82, 148, 25, 85, 328, 325, 87, 51, 7, 30, 342, 107, 177, 395, 273, 303, 396, 201, 70, 241, 23, 95, 111, 380, 18, 376, 370, 73, 246, 332, 20, 258, 47, 251, 172, 306, 329, 348, 200, 290, 54, 238, 277, 259, 3, 187, 188, 94, 102, 198, 309, 191, 133, 394, 170, 391, 301, 21, 65, 64, 88, 139, 113, 9, 320, 164, 192, 356, 2, 183, 68, 297, 324, 174, 147, 63, 97, 233, 227, 156, 74, 193, 228, 310, 126, 132, 89, 285, 134]
 construction = -11028.0
Time = 1860.774 seg


Tempo execução todos arquivos: 13021.007seg 
-----------------------------------------------------