Executing GRASP for file: instances/qbf020
Configuration:
 Construction mechanism = Reactive
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-96.0], size=[10], elements=[17, 5, 4, 14, 1, 9, 8, 12, 0, 13]
(Iter. 3) BestSol = Solution: cost=[-102.0], size=[11], elements=[4, 2, 14, 12, 16, 9, 18, 0, 1, 8, 5]
(Iter. 16) BestSol = Solution: cost=[-119.0], size=[8], elements=[2, 4, 14, 11, 15, 16, 3, 19]
(Iter. 25) BestSol = Solution: cost=[-120.0], size=[8], elements=[4, 2, 11, 15, 16, 14, 3, 6]
(Iter. 26798) BestSol = Solution: cost=[-125.0], size=[9], elements=[2, 4, 11, 14, 16, 3, 15, 9, 19]
 maxVal = Solution: cost=[-125.0], size=[9], elements=[2, 4, 11, 14, 16, 3, 15, 9, 19]
 construction = -120.0
Time = 1860.018 seg


Executing GRASP for file: instances/qbf040
Configuration:
 Construction mechanism = Reactive
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-264.0], size=[21], elements=[8, 20, 14, 1, 25, 24, 18, 6, 22, 36, 31, 3, 23, 7, 4, 11, 9, 15, 21, 34, 0]
(Iter. 3) BestSol = Solution: cost=[-283.0], size=[20], elements=[24, 1, 22, 8, 3, 36, 18, 14, 23, 2, 31, 7, 19, 25, 34, 26, 9, 4, 11, 15]
(Iter. 4) BestSol = Solution: cost=[-298.0], size=[20], elements=[24, 1, 22, 34, 36, 31, 23, 9, 7, 18, 26, 0, 32, 4, 15, 11, 14, 2, 25, 30]
(Iter. 46) BestSol = Solution: cost=[-309.0], size=[21], elements=[24, 34, 7, 23, 32, 1, 15, 9, 19, 11, 4, 21, 14, 36, 25, 17, 2, 33, 31, 26, 39]
(Iter. 532) BestSol = Solution: cost=[-314.0], size=[20], elements=[24, 34, 29, 21, 4, 15, 32, 9, 7, 33, 36, 31, 11, 19, 14, 2, 35, 0, 27, 26]
(Iter. 650) BestSol = Solution: cost=[-323.0], size=[22], elements=[8, 7, 14, 23, 34, 9, 31, 18, 26, 4, 11, 2, 24, 32, 33, 30, 1, 25, 21, 19, 15, 36]
(Iter. 7517) BestSol = Solution: cost=[-325.0], size=[22], elements=[14, 24, 34, 36, 31, 19, 1, 26, 33, 7, 8, 9, 25, 4, 21, 18, 2, 23, 3, 15, 11, 39]
(Iter. 24584) BestSol = Solution: cost=[-345.0], size=[21], elements=[14, 25, 1, 24, 19, 7, 31, 34, 21, 26, 9, 23, 32, 4, 11, 36, 18, 2, 33, 15, 39]
(Iter. 520078) BestSol = Solution: cost=[-366.0], size=[20], elements=[25, 2, 1, 26, 24, 14, 18, 21, 19, 34, 23, 31, 7, 4, 9, 11, 36, 32, 33, 15]
 maxVal = Solution: cost=[-366.0], size=[20], elements=[25, 2, 1, 26, 24, 14, 18, 21, 19, 34, 23, 31, 7, 4, 9, 11, 36, 32, 33, 15]
 construction = -348.0
Time = 1860.125 seg


Executing GRASP for file: instances/qbf060
Configuration:
 Construction mechanism = Reactive
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-364.0], size=[21], elements=[57, 3, 8, 21, 45, 6, 44, 28, 27, 5, 17, 30, 11, 26, 38, 2, 22, 23, 59, 42, 43]
(Iter. 3) BestSol = Solution: cost=[-423.0], size=[29], elements=[28, 3, 17, 16, 11, 34, 38, 26, 40, 49, 44, 42, 21, 56, 51, 4, 55, 30, 12, 9, 41, 24, 53, 35, 29, 46, 59, 14, 45]
(Iter. 5) BestSol = Solution: cost=[-461.0], size=[28], elements=[28, 3, 17, 16, 11, 34, 40, 49, 26, 38, 44, 42, 51, 56, 21, 4, 55, 30, 12, 53, 59, 24, 14, 35, 29, 41, 46, 22]
(Iter. 8) BestSol = Solution: cost=[-470.0], size=[26], elements=[13, 42, 44, 17, 53, 14, 51, 29, 56, 27, 43, 38, 24, 31, 34, 3, 26, 49, 4, 35, 59, 55, 16, 12, 41, 11]
(Iter. 317) BestSol = Solution: cost=[-477.0], size=[28], elements=[17, 44, 3, 28, 11, 16, 18, 42, 26, 38, 51, 49, 27, 34, 12, 53, 4, 24, 56, 55, 22, 14, 59, 35, 30, 29, 2, 45]
(Iter. 4740) BestSol = Solution: cost=[-480.0], size=[29], elements=[28, 3, 17, 40, 16, 34, 11, 49, 26, 38, 44, 42, 24, 41, 51, 56, 21, 4, 30, 29, 46, 55, 53, 35, 22, 59, 45, 23, 14]
(Iter. 42583) BestSol = Solution: cost=[-489.0], size=[27], elements=[4, 2, 40, 44, 49, 26, 17, 28, 3, 38, 34, 11, 56, 51, 42, 16, 24, 27, 53, 14, 59, 12, 30, 55, 35, 29, 33]
(Iter. 115104) BestSol = Solution: cost=[-495.0], size=[28], elements=[34, 11, 16, 12, 18, 49, 3, 44, 28, 17, 26, 38, 24, 51, 53, 27, 14, 42, 59, 56, 30, 29, 4, 55, 2, 35, 33, 45]
(Iter. 207604) BestSol = Solution: cost=[-500.0], size=[26], elements=[44, 13, 42, 54, 55, 43, 56, 29, 2, 51, 4, 27, 38, 14, 26, 17, 30, 3, 16, 35, 19, 49, 59, 33, 24, 45]
(Iter. 1019390) BestSol = Solution: cost=[-502.0], size=[26], elements=[13, 44, 42, 56, 55, 54, 43, 51, 29, 2, 27, 14, 4, 17, 38, 30, 26, 35, 59, 24, 49, 3, 16, 19, 33, 50]
 maxVal = Solution: cost=[-502.0], size=[26], elements=[13, 44, 42, 56, 55, 54, 43, 51, 29, 2, 27, 14, 4, 17, 38, 30, 26, 35, 59, 24, 49, 3, 16, 19, 33, 50]
 construction = -502.0
Time = 1860.148 seg


Executing GRASP for file: instances/qbf080
Configuration:
 Construction mechanism = Reactive
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-748.0], size=[37], elements=[48, 23, 37, 36, 2, 62, 18, 47, 31, 54, 58, 46, 64, 71, 19, 60, 9, 44, 20, 13, 65, 42, 3, 1, 43, 73, 24, 76, 22, 70, 4, 8, 49, 66, 5, 25, 57]
(Iter. 3) BestSol = Solution: cost=[-827.0], size=[37], elements=[48, 23, 37, 2, 36, 62, 18, 47, 31, 64, 46, 58, 19, 71, 75, 9, 42, 3, 54, 76, 24, 22, 60, 73, 13, 1, 43, 44, 8, 70, 51, 4, 49, 55, 74, 7, 61]
(Iter. 1002) BestSol = Solution: cost=[-838.0], size=[38], elements=[48, 23, 37, 36, 2, 62, 18, 31, 54, 3, 58, 42, 19, 8, 75, 9, 46, 60, 13, 71, 73, 44, 7, 69, 24, 64, 76, 43, 22, 49, 1, 4, 51, 74, 61, 55, 70, 21]
(Iter. 1986602) BestSol = Solution: cost=[-842.0], size=[38], elements=[23, 37, 48, 60, 46, 19, 69, 64, 62, 2, 18, 71, 58, 31, 36, 54, 9, 75, 42, 3, 1, 13, 24, 73, 7, 76, 74, 22, 44, 43, 49, 4, 8, 51, 61, 55, 70, 57]
 maxVal = Solution: cost=[-842.0], size=[38], elements=[23, 37, 48, 60, 46, 19, 69, 64, 62, 2, 18, 71, 58, 31, 36, 54, 9, 75, 42, 3, 1, 13, 24, 73, 7, 76, 74, 22, 44, 43, 49, 4, 8, 51, 61, 55, 70, 57]
 construction = -842.0
Time = 1860.016 seg


Executing GRASP for file: instances/qbf100
Configuration:
 Construction mechanism = Reactive
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-1016.0], size=[42], elements=[27, 68, 51, 36, 31, 95, 17, 2, 23, 22, 70, 7, 9, 74, 96, 44, 62, 14, 61, 26, 63, 59, 10, 18, 29, 56, 90, 37, 73, 86, 78, 40, 64, 43, 33, 91, 93, 84, 94, 81, 13, 80]
(Iter. 3) BestSol = Solution: cost=[-1114.0], size=[45], elements=[20, 92, 0, 13, 94, 45, 69, 61, 67, 16, 71, 9, 21, 10, 84, 2, 23, 79, 15, 91, 96, 44, 72, 48, 63, 75, 6, 12, 54, 8, 73, 98, 4, 33, 85, 50, 17, 14, 29, 22, 43, 59, 68, 55, 99]
(Iter. 7398) BestSol = Solution: cost=[-1187.0], size=[43], elements=[68, 43, 11, 57, 56, 38, 22, 49, 74, 51, 78, 23, 62, 10, 24, 7, 95, 17, 31, 70, 26, 28, 18, 81, 63, 44, 86, 90, 14, 64, 33, 2, 96, 34, 29, 71, 25, 93, 40, 91, 72, 87, 19]
(Iter. 30991) BestSol = Solution: cost=[-1200.0], size=[45], elements=[57, 43, 22, 84, 68, 67, 56, 82, 39, 91, 38, 78, 51, 66, 40, 18, 29, 14, 34, 95, 96, 64, 2, 6, 10, 23, 72, 44, 42, 59, 7, 63, 73, 62, 90, 71, 16, 9, 33, 80, 74, 28, 69, 45, 24]
(Iter. 92906) BestSol = Solution: cost=[-1227.0], size=[45], elements=[43, 57, 68, 11, 19, 56, 17, 51, 78, 38, 10, 74, 22, 62, 33, 85, 86, 64, 28, 91, 29, 14, 18, 44, 7, 42, 23, 73, 63, 96, 34, 90, 71, 2, 25, 24, 40, 69, 50, 45, 72, 66, 84, 67, 79]
(Iter. 229343) BestSol = Solution: cost=[-1238.0], size=[47], elements=[56, 22, 49, 57, 84, 68, 43, 10, 74, 38, 51, 26, 62, 17, 63, 78, 7, 11, 3, 44, 24, 23, 96, 86, 90, 95, 89, 31, 64, 81, 18, 14, 93, 29, 91, 69, 28, 71, 27, 2, 25, 19, 33, 94, 83, 34, 40]
(Iter. 499490) BestSol = Solution: cost=[-1247.0], size=[47], elements=[27, 2, 94, 84, 22, 44, 23, 95, 26, 62, 93, 33, 29, 18, 96, 91, 10, 17, 69, 7, 86, 56, 74, 51, 38, 64, 89, 14, 43, 24, 81, 3, 78, 31, 68, 57, 63, 11, 71, 90, 34, 19, 25, 83, 28, 61, 49]
 maxVal = Solution: cost=[-1247.0], size=[47], elements=[27, 2, 94, 84, 22, 44, 23, 95, 26, 62, 93, 33, 29, 18, 96, 91, 10, 17, 69, 7, 86, 56, 74, 51, 38, 64, 89, 14, 43, 24, 81, 3, 78, 31, 68, 57, 63, 11, 71, 90, 34, 19, 25, 83, 28, 61, 49]
 construction = -1247.0
Time = 1860.244 seg


Executing GRASP for file: instances/qbf200
Configuration:
 Construction mechanism = Reactive
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-3599.0], size=[88], elements=[172, 180, 104, 68, 138, 21, 139, 51, 50, 115, 112, 9, 145, 72, 117, 167, 179, 7, 70, 129, 131, 155, 54, 192, 141, 25, 193, 157, 174, 108, 185, 84, 34, 90, 4, 85, 77, 87, 81, 150, 62, 162, 101, 86, 106, 30, 12, 52, 45, 80, 119, 16, 160, 31, 69, 154, 73, 114, 23, 147, 132, 99, 156, 171, 19, 42, 148, 6, 161, 166, 67, 152, 163, 103, 196, 173, 64, 92, 199, 18, 36, 61, 111, 123, 181, 153, 0, 79]
(Iter. 3) BestSol = Solution: cost=[-3628.0], size=[86], elements=[4, 103, 5, 187, 72, 66, 46, 164, 75, 112, 184, 137, 116, 136, 82, 167, 145, 141, 23, 9, 183, 74, 55, 166, 169, 83, 131, 63, 19, 94, 86, 125, 30, 148, 32, 107, 49, 28, 110, 157, 179, 89, 70, 196, 155, 41, 18, 119, 129, 21, 54, 139, 95, 97, 25, 34, 154, 193, 192, 77, 16, 147, 162, 150, 165, 101, 88, 40, 61, 67, 45, 44, 171, 163, 143, 62, 153, 39, 144, 93, 199, 52, 182, 17, 29, 185]
(Iter. 1439) BestSol = Solution: cost=[-3747.0], size=[93], elements=[117, 68, 187, 4, 54, 12, 106, 6, 119, 5, 125, 155, 1, 70, 150, 72, 41, 21, 16, 138, 86, 51, 30, 112, 180, 167, 139, 169, 145, 160, 154, 129, 131, 179, 81, 104, 25, 52, 7, 148, 40, 28, 77, 133, 157, 29, 32, 39, 69, 141, 164, 114, 50, 192, 153, 100, 89, 156, 9, 103, 124, 199, 159, 144, 174, 34, 62, 87, 181, 99, 94, 166, 185, 85, 56, 63, 19, 165, 8, 107, 116, 161, 111, 171, 47, 196, 132, 31, 163, 36, 53, 140, 173]
(Iter. 79279) BestSol = Solution: cost=[-3761.0], size=[94], elements=[69, 17, 53, 66, 61, 67, 159, 150, 108, 84, 49, 119, 90, 34, 4, 100, 19, 155, 171, 31, 179, 117, 6, 11, 157, 145, 87, 80, 21, 138, 85, 114, 99, 174, 70, 141, 106, 148, 152, 7, 12, 153, 167, 185, 30, 54, 52, 81, 56, 140, 33, 16, 166, 181, 125, 1, 160, 143, 161, 8, 25, 123, 169, 175, 189, 154, 23, 129, 73, 45, 13, 165, 144, 177, 147, 121, 9, 47, 68, 115, 88, 193, 192, 195, 158, 110, 39, 184, 126, 26, 92, 94, 196, 93]
(Iter. 98228) BestSol = Solution: cost=[-3814.0], size=[95], elements=[117, 6, 4, 21, 145, 68, 54, 70, 155, 108, 51, 167, 104, 7, 174, 179, 121, 131, 25, 52, 12, 139, 133, 30, 40, 106, 112, 138, 85, 141, 87, 81, 160, 114, 169, 148, 69, 11, 166, 161, 157, 32, 100, 99, 56, 34, 153, 181, 62, 140, 29, 72, 154, 180, 185, 126, 77, 39, 129, 41, 31, 125, 46, 28, 19, 119, 45, 123, 164, 47, 172, 67, 94, 8, 143, 49, 171, 1, 184, 63, 170, 116, 107, 74, 5, 60, 9, 86, 103, 199, 150, 76, 13, 176, 88]
 maxVal = Solution: cost=[-3814.0], size=[95], elements=[117, 6, 4, 21, 145, 68, 54, 70, 155, 108, 51, 167, 104, 7, 174, 179, 121, 131, 25, 52, 12, 139, 133, 30, 40, 106, 112, 138, 85, 141, 87, 81, 160, 114, 169, 148, 69, 11, 166, 161, 157, 32, 100, 99, 56, 34, 153, 181, 62, 140, 29, 72, 154, 180, 185, 126, 77, 39, 129, 41, 31, 125, 46, 28, 19, 119, 45, 123, 164, 47, 172, 67, 94, 8, 143, 49, 171, 1, 184, 63, 170, 116, 107, 74, 5, 60, 9, 86, 103, 199, 150, 76, 13, 176, 88]
 construction = -3814.0
Time = 1860.234 seg


Executing GRASP for file: instances/qbf400
Configuration:
 Construction mechanism = Reactive
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-9408.0], size=[180], elements=[328, 180, 150, 304, 125, 143, 331, 206, 327, 153, 181, 377, 277, 353, 128, 80, 87, 372, 255, 263, 348, 186, 224, 222, 354, 83, 133, 285, 38, 159, 201, 373, 296, 119, 28, 41, 57, 245, 382, 232, 241, 385, 396, 368, 293, 253, 235, 130, 162, 114, 376, 47, 340, 158, 332, 23, 54, 77, 289, 94, 247, 259, 323, 9, 342, 17, 30, 278, 381, 160, 1, 124, 399, 298, 211, 20, 111, 96, 219, 355, 24, 288, 386, 139, 25, 360, 177, 50, 136, 350, 231, 29, 155, 70, 138, 5, 335, 390, 398, 393, 246, 389, 48, 3, 15, 43, 226, 196, 341, 192, 375, 236, 8, 380, 317, 326, 307, 265, 148, 89, 179, 11, 100, 85, 10, 229, 275, 134, 82, 183, 14, 84, 53, 157, 195, 113, 240, 228, 243, 193, 97, 215, 63, 156, 68, 364, 168, 221, 266, 56, 103, 301, 99, 366, 230, 384, 225, 184, 49, 251, 67, 126, 108, 291, 383, 371, 22, 273, 92, 244, 309, 140, 6, 147, 365, 73, 12, 308, 303, 200]
(Iter. 3) BestSol = Solution: cost=[-10472.0], size=[184], elements=[328, 180, 150, 304, 125, 143, 96, 298, 83, 296, 373, 226, 327, 235, 247, 245, 385, 87, 201, 342, 263, 241, 323, 47, 24, 134, 277, 224, 111, 119, 196, 28, 332, 80, 17, 84, 246, 211, 11, 368, 100, 399, 288, 49, 158, 372, 114, 76, 272, 267, 262, 377, 67, 85, 364, 157, 354, 30, 376, 103, 18, 159, 274, 240, 293, 14, 289, 278, 239, 307, 253, 38, 382, 205, 181, 98, 395, 299, 199, 162, 124, 236, 53, 371, 195, 92, 374, 155, 259, 94, 77, 265, 56, 153, 99, 275, 384, 154, 50, 1, 29, 177, 70, 148, 138, 163, 136, 25, 325, 34, 264, 350, 393, 229, 54, 192, 51, 383, 179, 285, 279, 360, 69, 82, 183, 387, 291, 139, 219, 309, 225, 72, 303, 378, 62, 167, 145, 169, 381, 200, 95, 190, 63, 23, 232, 45, 386, 336, 316, 390, 160, 170, 394, 133, 230, 220, 7, 9, 151, 339, 398, 164, 66, 48, 31, 331, 244, 168, 91, 348, 209, 81, 4, 73, 198, 193, 64, 223, 370, 345, 130, 363, 248, 367]
 maxVal = Solution: cost=[-10472.0], size=[184], elements=[328, 180, 150, 304, 125, 143, 96, 298, 83, 296, 373, 226, 327, 235, 247, 245, 385, 87, 201, 342, 263, 241, 323, 47, 24, 134, 277, 224, 111, 119, 196, 28, 332, 80, 17, 84, 246, 211, 11, 368, 100, 399, 288, 49, 158, 372, 114, 76, 272, 267, 262, 377, 67, 85, 364, 157, 354, 30, 376, 103, 18, 159, 274, 240, 293, 14, 289, 278, 239, 307, 253, 38, 382, 205, 181, 98, 395, 299, 199, 162, 124, 236, 53, 371, 195, 92, 374, 155, 259, 94, 77, 265, 56, 153, 99, 275, 384, 154, 50, 1, 29, 177, 70, 148, 138, 163, 136, 25, 325, 34, 264, 350, 393, 229, 54, 192, 51, 383, 179, 285, 279, 360, 69, 82, 183, 387, 291, 139, 219, 309, 225, 72, 303, 378, 62, 167, 145, 169, 381, 200, 95, 190, 63, 23, 232, 45, 386, 336, 316, 390, 160, 170, 394, 133, 230, 220, 7, 9, 151, 339, 398, 164, 66, 48, 31, 331, 244, 168, 91, 348, 209, 81, 4, 73, 198, 193, 64, 223, 370, 345, 130, 363, 248, 367]
 construction = -10472.0
Time = 1860.163 seg


Tempo execução todos arquivos: 13021.133seg 
-----------------------------------------------------
