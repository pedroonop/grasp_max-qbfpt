Executing GRASP for file: instances/qbf020
Configuration:
 Construction mechanism = Sampled greedy
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-9.0], size=[2], elements=[2, 17]
(Iter. 3) BestSol = Solution: cost=[-20.0], size=[2], elements=[17, 5]
(Iter. 12) BestSol = Solution: cost=[-26.0], size=[2], elements=[4, 2]
(Iter. 17) BestSol = Solution: cost=[-29.0], size=[3], elements=[12, 3, 14]
(Iter. 31) BestSol = Solution: cost=[-42.0], size=[4], elements=[14, 2, 16, 12]
(Iter. 42) BestSol = Solution: cost=[-50.0], size=[11], elements=[12, 0, 4, 13, 5, 7, 6, 14, 9, 1, 10]
(Iter. 90) BestSol = Solution: cost=[-81.0], size=[10], elements=[0, 2, 14, 11, 1, 9, 16, 4, 15, 17]
(Iter. 127) BestSol = Solution: cost=[-99.0], size=[9], elements=[9, 14, 17, 8, 0, 4, 1, 12, 5]
(Iter. 3011) BestSol = Solution: cost=[-103.0], size=[10], elements=[14, 4, 3, 15, 16, 9, 2, 18, 11, 1]
(Iter. 15369) BestSol = Solution: cost=[-120.0], size=[7], elements=[2, 11, 4, 15, 14, 16, 3]
(Iter. 409607) BestSol = Solution: cost=[-125.0], size=[9], elements=[4, 11, 9, 2, 14, 16, 15, 19, 3]
 maxVal = Solution: cost=[-125.0], size=[9], elements=[4, 11, 9, 2, 14, 16, 15, 19, 3]
 construction = -120.0
Time = 1860.024 seg


Executing GRASP for file: instances/qbf040
Configuration:
 Construction mechanism = Sampled greedy
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-46.0], size=[6], elements=[13, 25, 2, 0, 26, 16]
(Iter. 13) BestSol = Solution: cost=[-186.0], size=[13], elements=[4, 32, 21, 9, 12, 36, 10, 29, 14, 11, 2, 20, 34]
(Iter. 729) BestSol = Solution: cost=[-212.0], size=[20], elements=[24, 14, 1, 21, 20, 34, 32, 19, 18, 36, 10, 26, 31, 9, 8, 25, 4, 2, 11, 28]
(Iter. 2402) BestSol = Solution: cost=[-215.0], size=[19], elements=[13, 24, 1, 22, 7, 8, 34, 36, 19, 31, 10, 9, 32, 18, 25, 23, 26, 4, 11]
(Iter. 7213) BestSol = Solution: cost=[-263.0], size=[18], elements=[0, 9, 21, 10, 15, 4, 32, 29, 36, 34, 22, 24, 31, 11, 7, 1, 6, 25]
(Iter. 11748) BestSol = Solution: cost=[-264.0], size=[17], elements=[34, 29, 9, 4, 36, 33, 11, 30, 27, 21, 35, 31, 15, 2, 18, 32, 0]
(Iter. 23560) BestSol = Solution: cost=[-291.0], size=[20], elements=[32, 20, 14, 21, 19, 33, 24, 1, 2, 29, 4, 31, 7, 15, 9, 26, 34, 10, 36, 25]
(Iter. 31552) BestSol = Solution: cost=[-296.0], size=[18], elements=[34, 1, 2, 21, 9, 7, 15, 23, 11, 32, 31, 4, 24, 14, 33, 19, 36, 17]
(Iter. 33889) BestSol = Solution: cost=[-309.0], size=[20], elements=[34, 1, 23, 14, 36, 9, 31, 7, 26, 4, 32, 15, 18, 21, 24, 0, 11, 2, 33, 35]
(Iter. 272420) BestSol = Solution: cost=[-326.0], size=[21], elements=[4, 21, 15, 1, 14, 24, 32, 31, 0, 25, 2, 26, 9, 34, 7, 11, 33, 23, 18, 36, 30]
(Iter. 339677) BestSol = Solution: cost=[-331.0], size=[21], elements=[2, 19, 34, 18, 23, 32, 7, 21, 3, 11, 36, 33, 1, 4, 14, 9, 15, 26, 25, 31, 39]
(Iter. 1000890) BestSol = Solution: cost=[-335.0], size=[21], elements=[2, 18, 14, 24, 1, 31, 25, 3, 4, 21, 26, 36, 9, 11, 19, 7, 33, 8, 15, 34, 23]
(Iter. 1458914) BestSol = Solution: cost=[-343.0], size=[21], elements=[4, 1, 23, 18, 9, 21, 24, 7, 15, 11, 34, 36, 2, 31, 14, 33, 3, 25, 19, 26, 39]
(Iter. 1942589) BestSol = Solution: cost=[-345.0], size=[21], elements=[1, 9, 7, 34, 32, 23, 19, 11, 33, 26, 31, 18, 21, 15, 4, 24, 36, 2, 14, 25, 39]
 maxVal = Solution: cost=[-345.0], size=[21], elements=[1, 9, 7, 34, 32, 23, 19, 11, 33, 26, 31, 18, 21, 15, 4, 24, 36, 2, 14, 25, 39]
 construction = -345.0
Time = 1860.004 seg


Executing GRASP for file: instances/qbf060
Configuration:
 Construction mechanism = Sampled greedy
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-68.0], size=[6], elements=[28, 57, 11, 23, 40, 30]
(Iter. 3) BestSol = Solution: cost=[-190.0], size=[17], elements=[30, 44, 40, 4, 19, 7, 22, 32, 2, 57, 1, 41, 29, 45, 56, 55, 46]
(Iter. 51) BestSol = Solution: cost=[-201.0], size=[14], elements=[9, 28, 21, 4, 57, 45, 23, 3, 44, 11, 22, 6, 55, 27]
(Iter. 170) BestSol = Solution: cost=[-276.0], size=[19], elements=[42, 58, 4, 40, 49, 28, 52, 30, 16, 44, 34, 17, 21, 29, 56, 26, 11, 38, 13]
(Iter. 496) BestSol = Solution: cost=[-282.0], size=[16], elements=[4, 2, 29, 19, 56, 30, 27, 13, 45, 44, 55, 33, 42, 51, 54, 38]
(Iter. 551) BestSol = Solution: cost=[-286.0], size=[20], elements=[4, 5, 0, 34, 44, 30, 18, 17, 29, 21, 45, 22, 56, 52, 11, 23, 33, 28, 2, 1]
(Iter. 1555) BestSol = Solution: cost=[-292.0], size=[19], elements=[54, 2, 38, 45, 44, 6, 3, 27, 33, 42, 51, 55, 21, 11, 16, 43, 17, 28, 34]
(Iter. 1692) BestSol = Solution: cost=[-318.0], size=[23], elements=[28, 17, 42, 11, 44, 16, 51, 53, 52, 9, 34, 1, 38, 23, 4, 12, 21, 46, 40, 26, 30, 56, 35]
(Iter. 1777) BestSol = Solution: cost=[-347.0], size=[22], elements=[4, 32, 49, 57, 3, 19, 5, 39, 33, 31, 41, 54, 48, 44, 58, 56, 24, 45, 27, 35, 13, 29]
(Iter. 2783) BestSol = Solution: cost=[-392.0], size=[26], elements=[40, 24, 17, 30, 42, 26, 28, 34, 45, 38, 4, 16, 27, 0, 44, 35, 29, 56, 51, 49, 52, 14, 33, 53, 11, 50]
(Iter. 7007) BestSol = Solution: cost=[-409.0], size=[30], elements=[34, 4, 49, 16, 22, 45, 54, 28, 11, 40, 44, 55, 21, 51, 53, 3, 23, 24, 33, 56, 17, 41, 26, 35, 38, 30, 29, 59, 2, 6]
(Iter. 12090) BestSol = Solution: cost=[-440.0], size=[26], elements=[3, 55, 11, 28, 26, 45, 51, 4, 38, 34, 40, 17, 2, 59, 44, 49, 16, 12, 24, 42, 27, 56, 30, 53, 35, 18]
(Iter. 795010) BestSol = Solution: cost=[-443.0], size=[29], elements=[4, 24, 44, 11, 42, 33, 23, 45, 54, 3, 17, 30, 46, 14, 51, 29, 49, 2, 59, 26, 27, 38, 56, 16, 43, 55, 28, 50, 34]
(Iter. 1256279) BestSol = Solution: cost=[-453.0], size=[29], elements=[44, 2, 26, 17, 45, 27, 24, 35, 42, 38, 29, 51, 54, 16, 11, 37, 43, 4, 33, 30, 13, 3, 55, 14, 49, 12, 56, 59, 50]
(Iter. 1507632) BestSol = Solution: cost=[-461.0], size=[28], elements=[34, 17, 30, 45, 33, 29, 3, 54, 51, 4, 56, 27, 14, 43, 55, 12, 49, 59, 16, 44, 35, 42, 38, 26, 2, 11, 24, 10]
(Iter. 2603393) BestSol = Solution: cost=[-477.0], size=[26], elements=[44, 54, 33, 11, 24, 55, 49, 38, 2, 29, 12, 30, 42, 51, 59, 27, 14, 56, 26, 34, 43, 16, 3, 17, 4, 45]
(Iter. 4480185) BestSol = Solution: cost=[-484.0], size=[26], elements=[13, 44, 56, 54, 42, 4, 29, 35, 51, 55, 16, 30, 49, 14, 19, 12, 59, 24, 27, 3, 17, 33, 26, 2, 38, 11]
 maxVal = Solution: cost=[-484.0], size=[26], elements=[13, 44, 56, 54, 42, 4, 29, 35, 51, 55, 16, 30, 49, 14, 19, 12, 59, 24, 27, 3, 17, 33, 26, 2, 38, 11]
 construction = -484.0
Time = 1860.032 seg


Executing GRASP for file: instances/qbf080
Configuration:
 Construction mechanism = Sampled greedy
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-198.0], size=[13], elements=[22, 77, 4, 10, 54, 65, 5, 14, 68, 11, 44, 51, 53]
(Iter. 3) BestSol = Solution: cost=[-318.0], size=[18], elements=[62, 72, 14, 12, 19, 37, 2, 48, 58, 70, 18, 60, 22, 26, 8, 9, 64, 52]
(Iter. 32) BestSol = Solution: cost=[-475.0], size=[28], elements=[12, 65, 9, 13, 2, 44, 77, 31, 42, 10, 26, 43, 28, 54, 1, 24, 18, 61, 27, 11, 16, 3, 60, 29, 64, 15, 22, 78]
(Iter. 214) BestSol = Solution: cost=[-538.0], size=[33], elements=[20, 48, 23, 3, 60, 36, 37, 14, 58, 41, 62, 76, 53, 42, 70, 71, 8, 49, 17, 25, 34, 22, 4, 51, 40, 72, 13, 47, 9, 44, 24, 18, 65]
(Iter. 217) BestSol = Solution: cost=[-623.0], size=[32], elements=[37, 50, 38, 48, 42, 36, 2, 9, 60, 73, 6, 19, 8, 61, 54, 62, 71, 47, 20, 18, 64, 43, 3, 44, 4, 58, 31, 75, 49, 21, 24, 59]
(Iter. 1187) BestSol = Solution: cost=[-625.0], size=[29], elements=[3, 75, 20, 6, 42, 23, 49, 36, 54, 18, 13, 60, 72, 37, 2, 61, 73, 44, 31, 16, 69, 24, 48, 4, 66, 58, 7, 8, 19]
(Iter. 1243) BestSol = Solution: cost=[-631.0], size=[36], elements=[41, 24, 54, 28, 43, 63, 65, 5, 33, 13, 34, 42, 1, 7, 64, 58, 73, 47, 74, 49, 66, 59, 48, 37, 76, 3, 8, 2, 4, 31, 9, 71, 25, 23, 50, 79]
(Iter. 6701) BestSol = Solution: cost=[-696.0], size=[36], elements=[2, 7, 48, 60, 15, 3, 16, 14, 64, 50, 42, 69, 23, 75, 76, 37, 4, 54, 62, 6, 24, 19, 11, 73, 18, 58, 8, 31, 71, 22, 36, 44, 46, 49, 9, 38]
(Iter. 36735) BestSol = Solution: cost=[-723.0], size=[39], elements=[74, 23, 37, 49, 10, 1, 61, 36, 62, 18, 13, 22, 57, 64, 42, 53, 69, 44, 47, 55, 60, 2, 4, 8, 71, 73, 19, 25, 24, 51, 3, 76, 75, 16, 48, 31, 7, 46, 9]
(Iter. 65450) BestSol = Solution: cost=[-736.0], size=[35], elements=[42, 54, 69, 3, 58, 4, 11, 18, 24, 76, 48, 75, 60, 2, 27, 71, 37, 23, 8, 73, 46, 13, 55, 9, 19, 22, 29, 31, 70, 49, 36, 44, 5, 79, 43]
(Iter. 72936) BestSol = Solution: cost=[-737.0], size=[35], elements=[11, 63, 2, 58, 48, 54, 29, 23, 37, 10, 75, 36, 24, 9, 62, 18, 74, 71, 12, 73, 66, 27, 1, 43, 64, 31, 5, 3, 13, 42, 4, 65, 57, 70, 59]
(Iter. 78788) BestSol = Solution: cost=[-783.0], size=[36], elements=[74, 2, 62, 24, 22, 1, 47, 37, 42, 75, 36, 55, 70, 4, 49, 46, 73, 52, 51, 8, 3, 76, 18, 71, 19, 50, 54, 48, 14, 43, 61, 58, 72, 60, 44, 79]
(Iter. 678960) BestSol = Solution: cost=[-785.0], size=[38], elements=[36, 48, 47, 54, 24, 60, 7, 62, 71, 23, 75, 18, 13, 64, 44, 10, 73, 42, 69, 4, 76, 31, 37, 16, 22, 1, 74, 46, 49, 51, 2, 61, 3, 55, 8, 19, 9, 57]
(Iter. 1379598) BestSol = Solution: cost=[-792.0], size=[37], elements=[31, 1, 61, 60, 37, 13, 21, 49, 18, 72, 48, 51, 2, 24, 69, 47, 3, 42, 74, 73, 7, 43, 44, 55, 62, 75, 36, 76, 9, 50, 8, 54, 71, 4, 19, 22, 79]
 maxVal = Solution: cost=[-792.0], size=[37], elements=[31, 1, 61, 60, 37, 13, 21, 49, 18, 72, 48, 51, 2, 24, 69, 47, 3, 42, 74, 73, 7, 43, 44, 55, 62, 75, 36, 76, 9, 50, 8, 54, 71, 4, 19, 22, 79]
 construction = -792.0
Time = 1860.023 seg


Executing GRASP for file: instances/qbf100
Configuration:
 Construction mechanism = Sampled greedy
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 3) BestSol = Solution: cost=[-108.0], size=[8], elements=[97, 89, 9, 31, 24, 51, 74, 33]
(Iter. 4) BestSol = Solution: cost=[-153.0], size=[11], elements=[84, 97, 3, 51, 89, 70, 49, 79, 45, 0, 48]
(Iter. 5) BestSol = Solution: cost=[-463.0], size=[22], elements=[68, 57, 27, 37, 17, 26, 22, 95, 14, 66, 2, 62, 56, 70, 51, 59, 28, 73, 10, 44, 49, 9]
(Iter. 6) BestSol = Solution: cost=[-571.0], size=[33], elements=[26, 59, 27, 20, 72, 12, 64, 71, 16, 2, 53, 80, 69, 30, 83, 44, 89, 10, 92, 88, 38, 96, 74, 68, 6, 14, 3, 13, 93, 45, 21, 94, 17]
(Iter. 7) BestSol = Solution: cost=[-901.0], size=[38], elements=[28, 51, 31, 35, 68, 25, 22, 90, 7, 23, 16, 45, 24, 95, 77, 17, 79, 85, 74, 18, 2, 62, 14, 42, 10, 30, 73, 33, 50, 43, 98, 56, 36, 52, 86, 55, 19, 97]
(Iter. 177) BestSol = Solution: cost=[-955.0], size=[44], elements=[6, 57, 84, 2, 49, 34, 18, 22, 33, 94, 10, 42, 19, 44, 27, 43, 7, 63, 38, 20, 50, 17, 62, 68, 26, 96, 36, 69, 83, 61, 28, 95, 14, 71, 45, 23, 73, 56, 90, 64, 74, 91, 86, 72]
(Iter. 692) BestSol = Solution: cost=[-1053.0], size=[40], elements=[73, 58, 20, 42, 16, 7, 23, 51, 17, 19, 34, 28, 45, 90, 84, 69, 40, 56, 63, 10, 57, 62, 33, 38, 50, 71, 18, 22, 94, 92, 68, 29, 44, 2, 64, 5, 14, 96, 85, 27]
(Iter. 9099) BestSol = Solution: cost=[-1058.0], size=[48], elements=[61, 20, 76, 21, 62, 45, 12, 15, 23, 84, 48, 67, 22, 10, 5, 69, 30, 6, 2, 13, 92, 14, 72, 3, 91, 96, 16, 63, 75, 47, 44, 79, 68, 95, 59, 17, 82, 60, 29, 4, 94, 55, 81, 1, 38, 98, 0, 8]
(Iter. 15471) BestSol = Solution: cost=[-1096.0], size=[41], elements=[62, 44, 36, 45, 68, 29, 85, 51, 30, 22, 7, 2, 55, 14, 16, 81, 17, 98, 18, 15, 23, 38, 72, 25, 50, 74, 63, 28, 31, 79, 19, 71, 10, 96, 86, 57, 84, 3, 33, 92, 5]
(Iter. 43146) BestSol = Solution: cost=[-1133.0], size=[47], elements=[6, 57, 38, 91, 99, 75, 20, 64, 10, 11, 17, 22, 78, 21, 33, 13, 86, 34, 63, 68, 69, 71, 93, 92, 77, 14, 62, 96, 94, 95, 44, 3, 26, 83, 74, 61, 55, 28, 67, 82, 23, 84, 81, 79, 12, 72, 18]
(Iter. 106204) BestSol = Solution: cost=[-1169.0], size=[45], elements=[7, 56, 18, 43, 44, 42, 20, 85, 33, 62, 45, 10, 50, 71, 90, 14, 73, 57, 2, 59, 17, 69, 16, 51, 22, 64, 68, 67, 28, 23, 29, 96, 72, 19, 66, 9, 25, 38, 74, 78, 24, 91, 63, 34, 94]
(Iter. 177858) BestSol = Solution: cost=[-1196.0], size=[45], elements=[74, 64, 89, 19, 18, 33, 96, 2, 14, 43, 17, 44, 34, 29, 68, 62, 42, 78, 23, 40, 51, 38, 90, 22, 10, 24, 57, 85, 91, 31, 25, 7, 69, 73, 84, 11, 28, 45, 27, 71, 16, 56, 66, 63, 50]
 maxVal = Solution: cost=[-1196.0], size=[45], elements=[74, 64, 89, 19, 18, 33, 96, 2, 14, 43, 17, 44, 34, 29, 68, 62, 42, 78, 23, 40, 51, 38, 90, 22, 10, 24, 57, 85, 91, 31, 25, 7, 69, 73, 84, 11, 28, 45, 27, 71, 16, 56, 66, 63, 50]
 construction = -1196.0
Time = 1860.06 seg


Executing GRASP for file: instances/qbf200
Configuration:
 Construction mechanism = Sampled greedy
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-2959.0], size=[74], elements=[87, 117, 49, 61, 119, 13, 54, 80, 167, 121, 7, 21, 131, 145, 31, 127, 172, 69, 33, 90, 157, 72, 70, 77, 181, 104, 4, 155, 99, 6, 138, 85, 174, 192, 101, 52, 140, 44, 141, 114, 156, 196, 108, 45, 25, 179, 67, 171, 84, 12, 81, 185, 173, 94, 175, 34, 8, 100, 50, 161, 153, 30, 11, 197, 17, 23, 166, 47, 164, 86, 9, 198, 19, 18]
(Iter. 6) BestSol = Solution: cost=[-3156.0], size=[85], elements=[108, 61, 165, 103, 16, 19, 20, 159, 137, 166, 83, 121, 5, 124, 194, 51, 101, 174, 154, 150, 24, 2, 48, 37, 66, 4, 49, 145, 9, 99, 6, 190, 31, 76, 30, 140, 156, 63, 155, 148, 176, 93, 157, 134, 132, 25, 162, 118, 68, 123, 147, 58, 11, 152, 7, 102, 135, 80, 82, 67, 122, 84, 111, 62, 110, 18, 23, 171, 47, 81, 95, 195, 69, 141, 177, 151, 199, 115, 173, 105, 183, 180, 160, 192, 182]
(Iter. 13) BestSol = Solution: cost=[-3570.0], size=[97], elements=[5, 4, 74, 19, 155, 72, 111, 171, 187, 119, 66, 75, 68, 131, 156, 6, 150, 157, 94, 30, 77, 29, 154, 69, 41, 103, 67, 145, 51, 121, 16, 196, 54, 84, 28, 12, 167, 166, 153, 148, 125, 147, 164, 106, 25, 34, 53, 162, 7, 100, 140, 80, 8, 86, 56, 46, 70, 179, 117, 185, 9, 141, 169, 21, 138, 81, 112, 137, 23, 52, 129, 55, 99, 49, 184, 176, 114, 181, 62, 161, 110, 45, 149, 105, 160, 139, 163, 178, 199, 92, 42, 116, 144, 79, 132, 93, 195]
(Iter. 81) BestSol = Solution: cost=[-3639.0], size=[96], elements=[69, 171, 66, 31, 172, 72, 42, 17, 195, 117, 6, 5, 119, 62, 138, 156, 92, 169, 29, 34, 157, 53, 110, 28, 61, 70, 11, 155, 99, 175, 89, 199, 100, 111, 93, 105, 148, 124, 85, 80, 63, 56, 145, 196, 81, 179, 136, 19, 23, 87, 188, 106, 184, 30, 137, 187, 183, 4, 121, 198, 21, 132, 134, 114, 141, 159, 49, 46, 41, 147, 167, 7, 112, 166, 67, 45, 173, 164, 86, 26, 43, 52, 131, 25, 153, 160, 18, 20, 54, 73, 174, 154, 94, 139, 88, 113]
(Iter. 222) BestSol = Solution: cost=[-3722.0], size=[98], elements=[117, 114, 49, 89, 1, 121, 183, 173, 37, 34, 174, 187, 19, 52, 96, 76, 154, 165, 125, 45, 70, 103, 43, 199, 67, 5, 110, 196, 63, 86, 167, 17, 166, 61, 104, 69, 94, 4, 184, 158, 111, 85, 23, 192, 7, 106, 148, 159, 179, 193, 80, 195, 20, 145, 155, 124, 28, 137, 83, 13, 93, 72, 54, 25, 99, 157, 131, 143, 134, 160, 30, 101, 190, 119, 88, 198, 122, 51, 147, 171, 18, 16, 164, 136, 47, 46, 9, 127, 81, 66, 31, 123, 132, 73, 62, 139, 24, 180]
(Iter. 531) BestSol = Solution: cost=[-3817.0], size=[90], elements=[61, 197, 108, 191, 126, 87, 141, 13, 21, 101, 4, 95, 23, 17, 136, 67, 43, 184, 167, 26, 145, 92, 121, 179, 84, 162, 85, 30, 69, 166, 174, 7, 196, 54, 110, 192, 70, 155, 49, 114, 158, 147, 143, 122, 88, 9, 63, 25, 103, 113, 131, 157, 86, 94, 19, 31, 123, 80, 66, 190, 11, 18, 45, 183, 127, 106, 193, 154, 148, 181, 34, 72, 81, 111, 172, 51, 99, 119, 73, 160, 46, 125, 169, 104, 117, 195, 134, 156, 129, 97]
(Iter. 7968) BestSol = Solution: cost=[-3850.0], size=[99], elements=[159, 17, 187, 9, 188, 5, 156, 114, 4, 70, 154, 42, 125, 28, 86, 157, 20, 80, 103, 74, 69, 94, 99, 66, 106, 150, 72, 16, 51, 23, 119, 138, 142, 155, 1, 183, 54, 111, 163, 131, 19, 145, 30, 81, 100, 124, 169, 171, 167, 68, 49, 199, 34, 195, 166, 134, 117, 137, 21, 61, 147, 164, 56, 184, 181, 93, 82, 121, 37, 148, 192, 160, 110, 7, 83, 132, 87, 25, 141, 31, 105, 116, 89, 85, 136, 18, 165, 45, 41, 29, 63, 179, 129, 196, 39, 62, 52, 174, 198]
(Iter. 9011) BestSol = Solution: cost=[-3927.0], size=[97], elements=[89, 104, 187, 70, 52, 80, 179, 106, 116, 100, 86, 131, 54, 31, 117, 167, 110, 196, 133, 83, 155, 192, 69, 3, 43, 23, 157, 145, 164, 72, 114, 63, 4, 121, 103, 85, 34, 137, 25, 171, 144, 30, 81, 17, 184, 68, 61, 125, 160, 19, 16, 166, 119, 29, 156, 195, 13, 5, 148, 49, 183, 99, 165, 172, 66, 7, 138, 51, 45, 28, 21, 136, 94, 82, 141, 101, 39, 105, 142, 93, 154, 132, 158, 9, 87, 134, 20, 147, 62, 174, 37, 198, 42, 181, 73, 169, 190]
 maxVal = Solution: cost=[-3927.0], size=[97], elements=[89, 104, 187, 70, 52, 80, 179, 106, 116, 100, 86, 131, 54, 31, 117, 167, 110, 196, 133, 83, 155, 192, 69, 3, 43, 23, 157, 145, 164, 72, 114, 63, 4, 121, 103, 85, 34, 137, 25, 171, 144, 30, 81, 17, 184, 68, 61, 125, 160, 19, 16, 166, 119, 29, 156, 195, 13, 5, 148, 49, 183, 99, 165, 172, 66, 7, 138, 51, 45, 28, 21, 136, 94, 82, 141, 101, 39, 105, 142, 93, 154, 132, 158, 9, 87, 134, 20, 147, 62, 174, 37, 198, 42, 181, 73, 169, 190]
 construction = -3927.0
Time = 1860.075 seg


Executing GRASP for file: instances/qbf400
Configuration:
 Construction mechanism = Sampled greedy
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-9142.0], size=[184], elements=[19, 108, 389, 155, 120, 74, 58, 235, 49, 184, 310, 307, 95, 354, 4, 141, 166, 230, 247, 143, 379, 347, 228, 123, 144, 116, 132, 67, 197, 237, 31, 383, 338, 313, 357, 94, 363, 21, 152, 25, 32, 306, 121, 309, 145, 316, 97, 54, 370, 61, 294, 271, 217, 124, 30, 63, 17, 157, 6, 249, 348, 335, 137, 208, 147, 250, 305, 366, 15, 16, 168, 317, 323, 110, 229, 146, 296, 368, 7, 172, 114, 272, 80, 234, 293, 358, 288, 361, 85, 125, 5, 160, 261, 332, 391, 362, 190, 45, 72, 367, 56, 62, 69, 51, 285, 303, 193, 99, 93, 159, 378, 321, 215, 76, 92, 216, 236, 325, 382, 381, 70, 177, 65, 327, 336, 18, 156, 9, 158, 328, 77, 227, 299, 192, 174, 66, 290, 246, 269, 105, 170, 242, 195, 164, 220, 260, 320, 87, 73, 60, 1, 83, 312, 349, 342, 399, 47, 350, 266, 351, 329, 126, 209, 82, 324, 139, 223, 129, 81, 377, 107, 259, 198, 179, 39, 384, 165, 183, 398, 359, 113, 356, 38, 265]
(Iter. 3) BestSol = Solution: cost=[-9483.0], size=[184], elements=[69, 53, 355, 260, 27, 331, 84, 17, 230, 242, 277, 171, 397, 63, 122, 157, 342, 353, 75, 165, 352, 254, 30, 151, 244, 386, 262, 7, 159, 16, 9, 257, 364, 162, 28, 187, 288, 339, 67, 185, 263, 338, 24, 35, 49, 307, 12, 0, 15, 148, 368, 76, 316, 232, 317, 296, 190, 97, 40, 398, 155, 4, 110, 158, 292, 360, 246, 220, 124, 303, 272, 31, 290, 365, 196, 349, 356, 373, 111, 179, 354, 11, 48, 85, 168, 399, 273, 119, 327, 214, 247, 336, 387, 240, 95, 366, 285, 245, 289, 18, 125, 70, 100, 118, 332, 150, 174, 371, 91, 243, 286, 378, 99, 376, 62, 393, 54, 113, 94, 133, 241, 211, 321, 166, 224, 227, 226, 390, 192, 114, 300, 82, 385, 1, 183, 64, 394, 293, 235, 25, 143, 23, 130, 380, 309, 383, 258, 271, 22, 103, 279, 141, 294, 50, 177, 361, 108, 65, 267, 19, 51, 123, 370, 34, 229, 325, 127, 372, 253, 381, 351, 20, 312, 139, 160, 136, 126, 6, 73, 77, 83, 348, 395, 209]
(Iter. 14) BestSol = Solution: cost=[-9644.0], size=[185], elements=[358, 89, 231, 171, 340, 146, 254, 235, 1, 160, 391, 47, 192, 164, 92, 30, 389, 103, 327, 69, 20, 218, 41, 4, 284, 199, 347, 61, 114, 245, 158, 248, 52, 101, 267, 215, 54, 50, 253, 211, 293, 190, 289, 328, 154, 247, 19, 162, 285, 104, 87, 80, 375, 77, 385, 155, 131, 383, 350, 216, 5, 153, 369, 252, 398, 38, 299, 117, 125, 291, 166, 83, 316, 277, 6, 145, 102, 241, 93, 85, 18, 23, 124, 25, 119, 16, 136, 159, 250, 300, 237, 169, 9, 278, 167, 259, 381, 365, 100, 46, 227, 270, 382, 342, 187, 312, 107, 354, 10, 11, 306, 223, 73, 81, 378, 387, 82, 21, 351, 323, 332, 229, 195, 339, 62, 12, 170, 386, 296, 7, 148, 275, 314, 17, 53, 357, 97, 266, 183, 288, 244, 29, 63, 196, 56, 334, 179, 246, 209, 65, 224, 147, 309, 133, 174, 111, 336, 99, 394, 152, 139, 317, 366, 68, 138, 163, 140, 200, 157, 265, 380, 168, 283, 180, 24, 276, 234, 94, 331, 150, 240, 228, 134, 45, 91]
(Iter. 22) BestSol = Solution: cost=[-9927.0], size=[187], elements=[260, 69, 211, 21, 235, 6, 255, 28, 98, 284, 279, 332, 362, 227, 316, 114, 353, 159, 370, 219, 243, 119, 300, 17, 374, 247, 1, 231, 387, 94, 174, 382, 368, 312, 399, 91, 290, 250, 127, 84, 192, 229, 162, 201, 136, 27, 157, 352, 195, 88, 293, 50, 341, 154, 356, 124, 324, 32, 70, 369, 307, 103, 228, 373, 271, 130, 230, 125, 288, 292, 139, 354, 3, 163, 22, 49, 397, 120, 263, 240, 190, 327, 364, 206, 122, 56, 148, 38, 289, 372, 277, 97, 79, 82, 168, 128, 198, 14, 165, 16, 254, 224, 15, 113, 100, 246, 196, 371, 376, 24, 232, 48, 245, 265, 111, 236, 393, 151, 96, 99, 134, 78, 30, 251, 95, 158, 177, 92, 378, 166, 208, 205, 20, 248, 355, 253, 102, 262, 85, 323, 83, 233, 239, 241, 80, 278, 44, 320, 325, 363, 360, 381, 377, 394, 170, 272, 366, 274, 267, 183, 334, 384, 273, 143, 73, 386, 26, 25, 338, 11, 54, 309, 342, 383, 179, 390, 223, 264, 34, 153, 193, 204, 126, 63, 244, 281, 361]
(Iter. 28) BestSol = Solution: cost=[-10181.0], size=[166], elements=[260, 92, 175, 110, 155, 391, 279, 31, 289, 272, 273, 371, 230, 374, 151, 244, 163, 383, 342, 287, 301, 97, 362, 76, 195, 51, 251, 158, 22, 154, 309, 211, 125, 147, 17, 250, 368, 84, 88, 304, 56, 190, 377, 11, 194, 170, 366, 6, 196, 249, 35, 236, 53, 10, 253, 47, 38, 284, 316, 373, 208, 387, 15, 72, 69, 101, 223, 34, 95, 285, 220, 148, 189, 100, 168, 57, 174, 83, 288, 269, 165, 192, 364, 21, 177, 248, 184, 227, 117, 198, 171, 235, 328, 162, 108, 65, 1, 333, 276, 229, 389, 245, 240, 107, 296, 352, 327, 28, 356, 323, 7, 172, 50, 290, 332, 293, 66, 179, 307, 25, 85, 357, 166, 201, 134, 157, 119, 336, 360, 138, 49, 247, 265, 380, 120, 378, 114, 62, 61, 274, 384, 354, 77, 18, 306, 44, 226, 258, 281, 4, 99, 338, 193, 80, 215, 124, 385, 30, 300, 382, 239, 325, 225, 393, 153, 183]
(Iter. 119) BestSol = Solution: cost=[-10362.0], size=[188], elements=[393, 35, 155, 383, 326, 360, 146, 58, 31, 173, 130, 49, 95, 20, 391, 372, 289, 288, 279, 386, 121, 192, 84, 66, 387, 110, 371, 158, 257, 236, 378, 108, 92, 16, 154, 244, 136, 356, 352, 211, 147, 10, 53, 385, 177, 253, 234, 23, 377, 196, 368, 373, 235, 15, 216, 304, 80, 101, 77, 165, 265, 296, 124, 125, 157, 195, 83, 276, 250, 184, 229, 281, 291, 162, 17, 348, 1, 73, 148, 332, 100, 273, 172, 290, 389, 366, 18, 222, 328, 198, 285, 11, 38, 370, 159, 156, 132, 200, 263, 327, 227, 303, 151, 323, 306, 230, 82, 338, 51, 87, 258, 201, 70, 274, 251, 102, 380, 54, 25, 47, 50, 28, 342, 293, 179, 319, 138, 97, 277, 329, 357, 30, 325, 144, 152, 107, 3, 8, 189, 215, 63, 168, 62, 350, 240, 133, 354, 395, 309, 174, 381, 166, 193, 85, 34, 341, 99, 76, 7, 398, 24, 220, 300, 226, 336, 114, 239, 9, 259, 390, 75, 382, 224, 351, 376, 111, 335, 339, 183, 316, 145, 81, 134, 294, 369, 347, 256, 139]
(Iter. 135) BestSol = Solution: cost=[-10378.0], size=[192], elements=[108, 279, 92, 289, 230, 155, 117, 23, 254, 167, 54, 72, 184, 358, 373, 86, 192, 96, 56, 129, 4, 208, 1, 383, 70, 51, 103, 285, 216, 196, 193, 166, 351, 126, 253, 385, 84, 315, 226, 235, 380, 5, 368, 389, 77, 21, 25, 50, 154, 231, 101, 347, 211, 162, 327, 361, 164, 195, 376, 139, 239, 293, 328, 336, 247, 229, 384, 178, 49, 224, 18, 158, 352, 244, 85, 306, 263, 69, 148, 159, 307, 271, 179, 30, 16, 205, 46, 157, 128, 350, 386, 80, 9, 297, 73, 378, 110, 114, 163, 370, 177, 175, 304, 111, 141, 325, 288, 151, 354, 125, 113, 248, 34, 228, 398, 250, 165, 360, 44, 331, 290, 366, 100, 236, 232, 17, 94, 83, 22, 197, 65, 265, 381, 277, 323, 286, 309, 143, 28, 53, 95, 245, 342, 281, 153, 260, 190, 339, 240, 172, 97, 396, 371, 174, 273, 356, 82, 168, 119, 274, 303, 234, 134, 81, 316, 62, 324, 397, 223, 63, 160, 220, 198, 183, 147, 107, 284, 182, 246, 156, 227, 209, 259, 294, 364, 348, 47, 200, 61, 382, 89, 146]
(Iter. 287) BestSol = Solution: cost=[-10560.0], size=[194], elements=[362, 87, 91, 230, 316, 114, 247, 313, 121, 94, 189, 379, 299, 348, 233, 65, 328, 263, 48, 336, 142, 17, 262, 327, 307, 373, 63, 177, 143, 281, 95, 3, 10, 190, 304, 150, 200, 363, 49, 378, 97, 7, 387, 157, 70, 375, 261, 352, 371, 251, 376, 192, 211, 288, 339, 201, 274, 75, 384, 380, 239, 96, 205, 255, 354, 134, 145, 258, 265, 80, 174, 16, 179, 183, 366, 296, 165, 81, 386, 147, 119, 25, 306, 159, 154, 204, 83, 277, 320, 124, 170, 11, 133, 15, 364, 332, 127, 158, 110, 9, 309, 88, 122, 219, 290, 323, 144, 20, 168, 136, 99, 195, 292, 335, 51, 325, 285, 23, 103, 356, 338, 22, 227, 321, 156, 73, 18, 30, 66, 324, 166, 108, 222, 273, 383, 349, 1, 208, 24, 368, 397, 38, 303, 132, 223, 148, 58, 381, 240, 248, 289, 84, 326, 377, 272, 85, 146, 394, 100, 395, 385, 293, 82, 2, 102, 253, 76, 236, 45, 198, 279, 193, 50, 308, 92, 310, 398, 229, 360, 300, 151, 89, 260, 259, 246, 382, 276, 152, 111, 269, 47, 64, 334, 237]
(Iter. 800) BestSol = Solution: cost=[-10599.0], size=[185], elements=[159, 112, 197, 294, 46, 49, 281, 28, 4, 21, 327, 148, 69, 34, 114, 155, 211, 17, 145, 167, 47, 320, 376, 385, 153, 263, 9, 264, 240, 51, 179, 65, 323, 339, 40, 33, 66, 158, 54, 7, 125, 23, 328, 244, 383, 187, 247, 53, 73, 150, 119, 162, 117, 94, 285, 166, 368, 272, 67, 48, 72, 99, 304, 111, 359, 107, 345, 386, 121, 300, 354, 95, 309, 373, 230, 156, 239, 342, 316, 83, 232, 395, 397, 296, 273, 157, 110, 11, 348, 18, 196, 70, 360, 198, 277, 265, 394, 332, 375, 378, 177, 165, 209, 245, 85, 25, 15, 174, 3, 147, 366, 364, 140, 317, 223, 63, 172, 371, 30, 124, 259, 194, 87, 77, 91, 227, 195, 190, 97, 201, 236, 349, 61, 134, 306, 333, 101, 183, 113, 262, 352, 81, 100, 208, 338, 229, 387, 205, 164, 92, 233, 93, 193, 118, 351, 289, 84, 226, 276, 381, 336, 170, 234, 260, 275, 56, 301, 1, 219, 374, 152, 192, 22, 163, 290, 181, 292, 50, 184, 325, 13, 133, 127, 258, 2]
(Iter. 2220) BestSol = Solution: cost=[-10681.0], size=[185], elements=[9, 289, 331, 328, 222, 156, 347, 124, 244, 31, 80, 5, 352, 336, 292, 172, 180, 99, 320, 7, 351, 154, 23, 300, 323, 290, 81, 66, 114, 332, 17, 111, 58, 397, 304, 354, 160, 208, 312, 177, 122, 121, 132, 327, 303, 20, 398, 285, 227, 356, 224, 396, 139, 73, 158, 52, 134, 325, 385, 18, 326, 51, 335, 273, 349, 192, 24, 236, 247, 272, 381, 357, 30, 85, 195, 306, 16, 263, 384, 166, 56, 157, 299, 125, 387, 54, 45, 49, 88, 92, 215, 288, 174, 361, 47, 77, 200, 146, 196, 110, 70, 274, 147, 76, 119, 25, 296, 95, 102, 368, 145, 371, 63, 277, 131, 388, 43, 22, 393, 309, 123, 38, 250, 28, 278, 190, 69, 11, 21, 348, 179, 237, 108, 53, 339, 101, 259, 107, 286, 370, 383, 4, 1, 260, 183, 127, 211, 230, 165, 265, 155, 141, 350, 253, 94, 148, 293, 213, 234, 382, 386, 87, 360, 316, 394, 62, 338, 162, 14, 365, 373, 34, 324, 232, 364, 229, 82, 126, 294, 252, 281, 378, 246, 342, 262]
(Iter. 3090) BestSol = Solution: cost=[-10740.0], size=[189], elements=[184, 41, 22, 362, 276, 254, 251, 172, 204, 15, 83, 110, 13, 146, 378, 236, 279, 361, 34, 107, 360, 87, 94, 144, 49, 165, 391, 57, 10, 229, 91, 159, 240, 5, 114, 238, 88, 352, 211, 288, 56, 377, 260, 101, 289, 85, 3, 373, 183, 320, 66, 293, 321, 21, 108, 192, 84, 193, 95, 304, 63, 65, 35, 174, 287, 147, 136, 96, 285, 328, 38, 198, 247, 244, 386, 385, 380, 327, 166, 273, 69, 371, 76, 366, 359, 230, 25, 335, 121, 263, 97, 294, 364, 158, 17, 51, 151, 296, 28, 245, 342, 339, 11, 157, 272, 348, 125, 232, 23, 215, 286, 139, 383, 210, 9, 376, 395, 354, 50, 368, 239, 324, 309, 208, 195, 162, 62, 168, 124, 119, 100, 398, 81, 47, 297, 224, 292, 246, 179, 384, 16, 196, 243, 1, 235, 126, 290, 332, 182, 300, 267, 150, 80, 170, 214, 349, 177, 227, 372, 73, 220, 67, 325, 306, 308, 274, 143, 226, 269, 390, 92, 336, 122, 393, 381, 259, 48, 200, 338, 382, 45, 4, 99, 152, 218, 311, 132, 207, 82]
 maxVal = Solution: cost=[-10740.0], size=[189], elements=[184, 41, 22, 362, 276, 254, 251, 172, 204, 15, 83, 110, 13, 146, 378, 236, 279, 361, 34, 107, 360, 87, 94, 144, 49, 165, 391, 57, 10, 229, 91, 159, 240, 5, 114, 238, 88, 352, 211, 288, 56, 377, 260, 101, 289, 85, 3, 373, 183, 320, 66, 293, 321, 21, 108, 192, 84, 193, 95, 304, 63, 65, 35, 174, 287, 147, 136, 96, 285, 328, 38, 198, 247, 244, 386, 385, 380, 327, 166, 273, 69, 371, 76, 366, 359, 230, 25, 335, 121, 263, 97, 294, 364, 158, 17, 51, 151, 296, 28, 245, 342, 339, 11, 157, 272, 348, 125, 232, 23, 215, 286, 139, 383, 210, 9, 376, 395, 354, 50, 368, 239, 324, 309, 208, 195, 162, 62, 168, 124, 119, 100, 398, 81, 47, 297, 224, 292, 246, 179, 384, 16, 196, 243, 1, 235, 126, 290, 332, 182, 300, 267, 150, 80, 170, 214, 349, 177, 227, 372, 73, 220, 67, 325, 306, 308, 274, 143, 226, 269, 390, 92, 336, 122, 393, 381, 259, 48, 200, 338, 382, 45, 4, 99, 152, 218, 311, 132, 207, 82]
 construction = -10740.0
Time = 1860.371 seg


Tempo execução todos arquivos: 13020.589seg 
-----------------------------------------------------
