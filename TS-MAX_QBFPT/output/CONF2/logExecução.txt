Executing GRASP for file: instances/qbf020
Configuration:
 Construction mechanism = Standard
 Alpha = 0.1
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-96.0], size=[10], elements=[17, 5, 4, 14, 1, 8, 9, 0, 12, 13]
(Iter. 4) BestSol = Solution: cost=[-120.0], size=[10], elements=[4, 2, 14, 12, 16, 9, 18, 0, 1, 8]
 maxVal = Solution: cost=[-120.0], size=[10], elements=[4, 2, 14, 12, 16, 9, 18, 0, 1, 8]
 construction = -102.0
Time = 1860.01 seg


Executing GRASP for file: instances/qbf040
Configuration:
 Construction mechanism = Standard
 Alpha = 0.1
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-276.0], size=[20], elements=[37, 25, 1, 24, 19, 34, 21, 28, 7, 15, 31, 12, 11, 9, 10, 32, 33, 35, 2, 29]
(Iter. 4) BestSol = Solution: cost=[-287.0], size=[20], elements=[24, 22, 1, 0, 31, 36, 9, 34, 23, 7, 18, 26, 32, 4, 11, 15, 6, 25, 14, 8]
(Iter. 6) BestSol = Solution: cost=[-296.0], size=[22], elements=[37, 10, 1, 19, 21, 24, 25, 26, 2, 7, 34, 18, 4, 9, 14, 36, 11, 12, 32, 33, 15, 8]
(Iter. 17) BestSol = Solution: cost=[-303.0], size=[20], elements=[24, 34, 22, 32, 36, 31, 9, 0, 15, 1, 7, 23, 4, 21, 11, 18, 14, 2, 25, 30]
(Iter. 45) BestSol = Solution: cost=[-325.0], size=[22], elements=[14, 25, 8, 1, 2, 3, 19, 24, 18, 21, 36, 7, 31, 11, 4, 23, 26, 9, 34, 33, 15, 39]
(Iter. 111) BestSol = Solution: cost=[-335.0], size=[21], elements=[8, 1, 14, 25, 24, 19, 2, 18, 26, 21, 31, 7, 3, 36, 4, 23, 9, 11, 34, 33, 15]
(Iter. 600) BestSol = Solution: cost=[-343.0], size=[21], elements=[14, 25, 1, 2, 19, 21, 24, 18, 26, 31, 3, 36, 7, 23, 4, 11, 9, 34, 33, 15, 39]
(Iter. 769) BestSol = Solution: cost=[-352.0], size=[20], elements=[1, 24, 25, 14, 18, 2, 19, 26, 21, 3, 36, 31, 34, 23, 7, 9, 4, 11, 33, 15]
(Iter. 74611) BestSol = Solution: cost=[-366.0], size=[20], elements=[14, 25, 1, 24, 19, 21, 2, 26, 18, 31, 4, 36, 9, 23, 34, 7, 11, 32, 33, 15]
 maxVal = Solution: cost=[-366.0], size=[20], elements=[14, 25, 1, 24, 19, 21, 2, 26, 18, 31, 4, 36, 9, 23, 34, 7, 11, 32, 33, 15]
 construction = -345.0
Time = 1860.001 seg


Executing GRASP for file: instances/qbf060
Configuration:
 Construction mechanism = Standard
 Alpha = 0.1
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-325.0], size=[23], elements=[13, 57, 45, 2, 44, 18, 6, 11, 26, 30, 8, 27, 21, 17, 38, 28, 3, 22, 23, 16, 42, 43, 14]
(Iter. 3) BestSol = Solution: cost=[-357.0], size=[22], elements=[57, 21, 8, 45, 6, 30, 11, 18, 44, 46, 23, 28, 4, 22, 9, 41, 38, 17, 52, 26, 32, 49]
(Iter. 4) BestSol = Solution: cost=[-366.0], size=[23], elements=[3, 17, 28, 40, 10, 16, 4, 49, 34, 11, 26, 38, 44, 45, 22, 21, 41, 24, 23, 59, 30, 46, 56]
(Iter. 6) BestSol = Solution: cost=[-409.0], size=[23], elements=[3, 28, 17, 16, 42, 11, 26, 55, 38, 44, 51, 21, 27, 45, 34, 4, 33, 2, 30, 54, 29, 22, 35]
(Iter. 8) BestSol = Solution: cost=[-419.0], size=[29], elements=[28, 3, 17, 40, 10, 16, 26, 11, 38, 34, 49, 44, 4, 45, 22, 41, 21, 23, 24, 56, 2, 59, 31, 51, 35, 55, 29, 42, 20]
(Iter. 10) BestSol = Solution: cost=[-427.0], size=[25], elements=[3, 28, 17, 16, 42, 11, 44, 26, 38, 40, 49, 34, 41, 21, 51, 4, 56, 55, 30, 29, 54, 12, 35, 24, 46]
(Iter. 18) BestSol = Solution: cost=[-428.0], size=[26], elements=[34, 28, 3, 17, 16, 40, 49, 11, 26, 38, 44, 41, 24, 0, 45, 21, 27, 51, 39, 30, 4, 46, 22, 29, 53, 14]
(Iter. 21) BestSol = Solution: cost=[-434.0], size=[28], elements=[18, 44, 0, 45, 11, 33, 24, 3, 27, 16, 28, 17, 26, 38, 49, 51, 4, 2, 34, 40, 53, 22, 46, 29, 30, 41, 56, 42]
(Iter. 27) BestSol = Solution: cost=[-458.0], size=[26], elements=[28, 17, 3, 16, 40, 42, 11, 26, 38, 44, 49, 34, 21, 56, 51, 24, 4, 41, 30, 29, 46, 55, 22, 53, 35, 23]
(Iter. 31) BestSol = Solution: cost=[-477.0], size=[28], elements=[28, 17, 3, 44, 40, 26, 42, 38, 11, 16, 49, 34, 51, 24, 56, 41, 4, 30, 27, 29, 35, 53, 55, 12, 59, 14, 2, 22]
(Iter. 105) BestSol = Solution: cost=[-480.0], size=[29], elements=[3, 17, 28, 40, 26, 44, 42, 38, 11, 21, 16, 34, 49, 51, 56, 24, 4, 30, 41, 55, 22, 29, 46, 53, 35, 59, 45, 23, 14]
(Iter. 241) BestSol = Solution: cost=[-489.0], size=[27], elements=[3, 28, 17, 44, 40, 26, 42, 49, 11, 16, 38, 34, 24, 56, 51, 27, 4, 53, 2, 14, 29, 55, 59, 30, 35, 12, 33]
(Iter. 334) BestSol = Solution: cost=[-500.0], size=[26], elements=[13, 44, 42, 56, 43, 54, 14, 29, 51, 27, 17, 38, 16, 3, 26, 2, 49, 24, 4, 35, 55, 59, 19, 30, 33, 45]
(Iter. 1546) BestSol = Solution: cost=[-502.0], size=[26], elements=[13, 44, 42, 56, 54, 2, 55, 4, 51, 29, 43, 38, 27, 14, 17, 30, 26, 35, 24, 59, 49, 3, 19, 16, 33, 50]
(Iter. 45767) BestSol = Solution: cost=[-508.0], size=[25], elements=[13, 42, 44, 56, 55, 54, 51, 2, 4, 43, 29, 27, 30, 14, 38, 17, 26, 35, 3, 24, 49, 59, 19, 16, 33]
 maxVal = Solution: cost=[-508.0], size=[25], elements=[13, 42, 44, 56, 55, 54, 51, 2, 4, 43, 29, 27, 30, 14, 38, 17, 26, 35, 3, 24, 49, 59, 19, 16, 33]
 construction = -502.0
Time = 1860.004 seg


Executing GRASP for file: instances/qbf080
Configuration:
 Construction mechanism = Standard
 Alpha = 0.1
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-665.0], size=[33], elements=[1, 29, 12, 4, 2, 3, 11, 54, 15, 32, 50, 53, 31, 7, 75, 24, 65, 13, 23, 74, 48, 10, 9, 73, 71, 60, 36, 21, 37, 62, 64, 27, 49]
(Iter. 3) BestSol = Solution: cost=[-727.0], size=[36], elements=[33, 7, 73, 75, 16, 31, 13, 44, 57, 54, 1, 18, 60, 48, 2, 62, 10, 3, 42, 9, 36, 37, 71, 49, 76, 22, 4, 5, 24, 43, 58, 51, 61, 8, 69, 79]
(Iter. 5) BestSol = Solution: cost=[-742.0], size=[34], elements=[3, 54, 2, 42, 7, 18, 48, 4, 31, 75, 11, 23, 36, 6, 13, 8, 49, 44, 37, 61, 69, 60, 58, 73, 66, 24, 16, 71, 74, 10, 76, 9, 34, 78]
(Iter. 30) BestSol = Solution: cost=[-770.0], size=[33], elements=[64, 62, 37, 2, 19, 48, 46, 58, 31, 18, 47, 23, 36, 71, 75, 9, 42, 73, 43, 12, 24, 65, 29, 22, 74, 1, 53, 3, 70, 13, 20, 4, 27]
(Iter. 31) BestSol = Solution: cost=[-788.0], size=[34], elements=[2, 29, 1, 64, 37, 62, 48, 43, 19, 21, 71, 9, 60, 18, 12, 42, 58, 27, 46, 24, 22, 31, 54, 3, 70, 13, 73, 75, 4, 65, 57, 5, 10, 51]
(Iter. 109) BestSol = Solution: cost=[-794.0], size=[37], elements=[23, 37, 48, 36, 31, 2, 62, 18, 75, 54, 71, 46, 19, 64, 58, 9, 42, 3, 60, 69, 73, 24, 13, 76, 7, 44, 16, 66, 70, 1, 43, 22, 74, 49, 4, 51, 55]
(Iter. 127) BestSol = Solution: cost=[-816.0], size=[35], elements=[48, 23, 37, 36, 31, 2, 18, 54, 62, 60, 13, 57, 46, 58, 44, 19, 69, 64, 42, 9, 1, 71, 43, 73, 29, 75, 24, 3, 76, 70, 51, 4, 22, 74, 55]
(Iter. 169) BestSol = Solution: cost=[-829.0], size=[35], elements=[48, 23, 37, 60, 18, 54, 36, 31, 69, 7, 13, 44, 2, 46, 58, 42, 3, 9, 24, 75, 73, 71, 19, 64, 62, 76, 70, 74, 1, 4, 49, 51, 22, 43, 57]
(Iter. 4302) BestSol = Solution: cost=[-838.0], size=[38], elements=[48, 23, 37, 36, 2, 31, 54, 18, 58, 3, 62, 42, 75, 19, 71, 9, 46, 60, 8, 13, 1, 73, 24, 7, 69, 43, 64, 76, 44, 22, 70, 4, 49, 74, 51, 55, 61, 21]
(Iter. 4385) BestSol = Solution: cost=[-842.0], size=[38], elements=[48, 23, 37, 60, 19, 2, 18, 36, 62, 42, 8, 3, 58, 31, 54, 9, 46, 13, 71, 75, 73, 76, 7, 44, 69, 49, 24, 4, 22, 1, 64, 43, 70, 74, 51, 61, 55, 57]
 maxVal = Solution: cost=[-842.0], size=[38], elements=[48, 23, 37, 60, 19, 2, 18, 36, 62, 42, 8, 3, 58, 31, 54, 9, 46, 13, 71, 75, 73, 76, 7, 44, 69, 49, 24, 4, 22, 1, 64, 43, 70, 74, 51, 61, 55, 57]
 construction = -842.0
Time = 1860.052 seg


Executing GRASP for file: instances/qbf100
Configuration:
 Construction mechanism = Standard
 Alpha = 0.1
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-968.0], size=[43], elements=[40, 84, 2, 58, 35, 51, 27, 36, 23, 73, 45, 9, 85, 16, 61, 15, 80, 68, 70, 44, 55, 17, 28, 10, 7, 62, 63, 19, 25, 33, 42, 29, 21, 18, 98, 31, 14, 71, 86, 22, 57, 50, 24]
(Iter. 6) BestSol = Solution: cost=[-1034.0], size=[41], elements=[20, 92, 0, 45, 13, 94, 33, 43, 50, 57, 6, 71, 69, 10, 38, 67, 21, 91, 72, 44, 74, 16, 73, 23, 9, 22, 56, 7, 90, 62, 26, 37, 59, 29, 68, 17, 2, 14, 95, 93, 55]
(Iter. 7) BestSol = Solution: cost=[-1066.0], size=[41], elements=[74, 37, 0, 3, 89, 49, 97, 29, 39, 68, 62, 23, 10, 79, 2, 51, 9, 28, 14, 61, 31, 63, 22, 18, 84, 85, 19, 44, 96, 7, 78, 45, 25, 90, 42, 24, 71, 16, 15, 81, 92]
(Iter. 8) BestSol = Solution: cost=[-1119.0], size=[47], elements=[43, 68, 57, 11, 12, 19, 56, 10, 62, 38, 22, 74, 44, 64, 89, 26, 78, 34, 84, 81, 63, 39, 18, 3, 71, 14, 24, 7, 49, 23, 96, 2, 51, 69, 40, 29, 90, 16, 85, 91, 93, 33, 86, 25, 58, 28, 31]
(Iter. 12) BestSol = Solution: cost=[-1149.0], size=[45], elements=[27, 51, 68, 36, 95, 31, 17, 2, 29, 22, 23, 18, 7, 14, 40, 85, 74, 62, 96, 90, 24, 78, 64, 93, 33, 38, 86, 10, 43, 56, 91, 11, 87, 71, 63, 25, 19, 34, 72, 28, 81, 69, 26, 57, 94]
(Iter. 61) BestSol = Solution: cost=[-1158.0], size=[46], elements=[2, 23, 40, 22, 27, 84, 94, 73, 95, 51, 33, 85, 18, 29, 93, 56, 34, 16, 17, 10, 7, 90, 64, 86, 91, 14, 43, 96, 69, 24, 62, 38, 74, 89, 68, 19, 71, 25, 31, 63, 28, 78, 11, 57, 83, 45]
(Iter. 143) BestSol = Solution: cost=[-1200.0], size=[45], elements=[22, 82, 84, 57, 68, 43, 66, 39, 91, 14, 95, 38, 78, 51, 56, 67, 29, 18, 2, 10, 40, 23, 44, 7, 62, 96, 63, 90, 42, 59, 34, 73, 64, 72, 71, 33, 74, 6, 69, 45, 28, 16, 9, 80, 24]
(Iter. 365) BestSol = Solution: cost=[-1259.0], size=[47], elements=[44, 20, 7, 73, 42, 18, 45, 10, 71, 72, 19, 69, 96, 16, 2, 23, 92, 94, 33, 34, 90, 50, 9, 25, 63, 38, 85, 62, 29, 17, 51, 74, 57, 22, 68, 14, 28, 64, 56, 78, 86, 67, 91, 61, 79, 84, 24]
(Iter. 10468) BestSol = Solution: cost=[-1260.0], size=[47], elements=[44, 20, 7, 18, 10, 42, 19, 84, 2, 45, 17, 57, 71, 69, 96, 72, 50, 33, 38, 34, 92, 63, 94, 23, 73, 16, 90, 85, 9, 25, 74, 22, 62, 29, 51, 64, 78, 56, 68, 67, 61, 14, 28, 86, 79, 91, 81]
 maxVal = Solution: cost=[-1260.0], size=[47], elements=[44, 20, 7, 18, 10, 42, 19, 84, 2, 45, 17, 57, 71, 69, 96, 72, 50, 33, 38, 34, 92, 63, 94, 23, 73, 16, 90, 85, 9, 25, 74, 22, 62, 29, 51, 64, 78, 56, 68, 67, 61, 14, 28, 86, 79, 91, 81]
 construction = -1260.0
Time = 1860.015 seg


Executing GRASP for file: instances/qbf200
Configuration:
 Construction mechanism = Standard
 Alpha = 0.1
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-3070.0], size=[87], elements=[159, 108, 167, 184, 66, 17, 43, 23, 166, 74, 67, 63, 4, 22, 176, 24, 5, 170, 121, 164, 71, 20, 88, 93, 49, 2, 112, 179, 122, 60, 96, 7, 75, 12, 58, 6, 30, 68, 9, 126, 118, 62, 64, 113, 133, 149, 101, 110, 19, 81, 148, 65, 143, 116, 162, 46, 145, 48, 173, 114, 94, 141, 120, 136, 85, 123, 95, 158, 125, 131, 83, 181, 111, 102, 191, 1, 32, 15, 99, 70, 152, 91, 52, 100, 190, 39, 25]
(Iter. 3) BestSol = Solution: cost=[-3385.0], size=[87], elements=[4, 103, 5, 108, 6, 101, 66, 135, 187, 166, 19, 46, 72, 155, 148, 49, 164, 137, 75, 61, 140, 110, 121, 30, 89, 51, 62, 176, 102, 31, 171, 157, 145, 69, 63, 169, 95, 99, 53, 174, 18, 132, 119, 156, 172, 183, 23, 93, 80, 111, 134, 147, 154, 70, 196, 92, 68, 138, 106, 58, 45, 193, 67, 100, 84, 152, 85, 160, 29, 11, 54, 153, 14, 55, 198, 162, 167, 81, 94, 21, 7, 117, 112, 40, 28, 161, 188]
(Iter. 6) BestSol = Solution: cost=[-3386.0], size=[94], elements=[53, 108, 159, 66, 61, 176, 67, 4, 150, 103, 137, 184, 157, 17, 100, 30, 167, 63, 166, 49, 20, 121, 23, 93, 147, 48, 164, 58, 91, 24, 19, 141, 145, 155, 16, 68, 25, 95, 75, 134, 46, 143, 73, 13, 110, 193, 129, 83, 9, 80, 133, 40, 160, 165, 44, 118, 158, 54, 170, 18, 130, 125, 153, 45, 85, 52, 77, 11, 34, 37, 7, 171, 56, 123, 192, 81, 47, 15, 69, 181, 29, 12, 172, 195, 99, 117, 62, 21, 113, 198, 86, 94, 28, 180]
(Iter. 7) BestSol = Solution: cost=[-3632.0], size=[84], elements=[117, 68, 6, 4, 21, 145, 54, 155, 108, 19, 70, 125, 95, 143, 67, 150, 60, 11, 179, 126, 174, 106, 141, 121, 85, 87, 7, 84, 12, 185, 34, 51, 162, 167, 52, 25, 101, 81, 131, 30, 113, 123, 104, 77, 114, 69, 148, 161, 90, 181, 169, 166, 100, 32, 39, 61, 138, 157, 45, 94, 170, 129, 16, 1, 49, 119, 164, 192, 8, 154, 58, 184, 147, 31, 99, 41, 13, 196, 172, 180, 111, 160, 80, 76]
(Iter. 11) BestSol = Solution: cost=[-3758.0], size=[88], elements=[66, 184, 108, 49, 43, 121, 179, 31, 155, 166, 195, 110, 196, 23, 167, 145, 157, 141, 7, 67, 69, 147, 72, 80, 61, 17, 63, 172, 119, 45, 83, 4, 85, 34, 82, 90, 183, 99, 103, 26, 19, 86, 111, 131, 70, 134, 81, 114, 94, 193, 54, 174, 106, 84, 192, 101, 95, 44, 198, 87, 51, 138, 33, 117, 162, 113, 25, 30, 127, 160, 16, 171, 42, 73, 156, 9, 175, 143, 169, 125, 154, 129, 13, 123, 158, 18, 97, 197]
(Iter. 12) BestSol = Solution: cost=[-3831.0], size=[92], elements=[21, 172, 117, 6, 87, 145, 68, 7, 4, 70, 104, 131, 155, 121, 54, 80, 179, 110, 167, 51, 129, 25, 108, 193, 160, 85, 77, 192, 157, 84, 72, 73, 31, 141, 61, 30, 69, 148, 90, 138, 39, 16, 147, 106, 185, 174, 162, 101, 34, 83, 184, 81, 126, 12, 195, 175, 154, 169, 1, 95, 13, 196, 49, 43, 114, 45, 119, 58, 125, 67, 166, 23, 19, 33, 158, 123, 152, 99, 173, 36, 93, 8, 115, 94, 181, 140, 198, 50, 9, 113, 111, 15]
(Iter. 72) BestSol = Solution: cost=[-3919.0], size=[91], elements=[172, 180, 72, 31, 157, 138, 83, 196, 145, 80, 77, 155, 150, 173, 174, 38, 34, 87, 33, 140, 45, 185, 6, 147, 7, 63, 124, 199, 115, 58, 41, 56, 16, 153, 171, 9, 81, 49, 154, 86, 181, 25, 85, 69, 162, 132, 28, 21, 30, 51, 131, 101, 4, 119, 99, 108, 166, 163, 54, 148, 165, 106, 67, 137, 160, 23, 52, 19, 125, 95, 112, 93, 198, 117, 176, 110, 129, 8, 40, 68, 175, 184, 70, 141, 183, 193, 121, 94, 195, 139, 39]
(Iter. 1086) BestSol = Solution: cost=[-3949.0], size=[93], elements=[143, 108, 141, 23, 4, 145, 95, 54, 155, 70, 85, 80, 125, 19, 131, 52, 83, 174, 166, 63, 167, 25, 160, 7, 121, 104, 51, 158, 133, 148, 110, 179, 117, 46, 129, 68, 30, 21, 49, 169, 69, 106, 114, 87, 101, 154, 147, 192, 61, 126, 67, 184, 73, 193, 13, 17, 45, 123, 157, 196, 103, 72, 16, 172, 86, 94, 134, 99, 31, 198, 81, 113, 175, 195, 9, 33, 34, 181, 150, 77, 119, 1, 183, 39, 136, 180, 28, 138, 164, 153, 89, 29, 18]
(Iter. 4932) BestSol = Solution: cost=[-3984.0], size=[93], elements=[49, 184, 31, 179, 121, 66, 89, 43, 110, 195, 88, 192, 196, 157, 72, 155, 193, 187, 145, 70, 80, 137, 7, 117, 131, 172, 103, 4, 183, 61, 69, 127, 99, 166, 141, 86, 119, 23, 106, 101, 19, 20, 167, 104, 171, 111, 18, 164, 9, 17, 162, 114, 37, 34, 85, 156, 174, 94, 81, 30, 45, 62, 87, 67, 21, 138, 165, 51, 112, 25, 54, 154, 147, 132, 28, 52, 5, 42, 11, 148, 125, 198, 63, 93, 82, 160, 169, 47, 199, 190, 139, 180, 50]
(Iter. 5791) BestSol = Solution: cost=[-3997.0], size=[92], elements=[49, 117, 31, 69, 179, 7, 127, 184, 84, 90, 13, 192, 107, 26, 34, 87, 172, 119, 111, 171, 131, 145, 72, 66, 167, 183, 157, 155, 195, 121, 110, 85, 81, 193, 141, 61, 99, 70, 80, 114, 51, 4, 54, 137, 25, 147, 94, 162, 174, 86, 11, 67, 138, 23, 45, 17, 106, 124, 43, 101, 30, 198, 21, 52, 148, 166, 95, 19, 160, 158, 88, 33, 83, 134, 73, 123, 181, 122, 18, 9, 154, 46, 140, 153, 170, 164, 143, 125, 152, 197, 8, 112]
(Iter. 6265) BestSol = Solution: cost=[-4001.0], size=[97], elements=[87, 83, 143, 145, 61, 95, 172, 150, 21, 128, 4, 101, 6, 108, 174, 51, 19, 169, 126, 125, 54, 155, 70, 68, 63, 46, 23, 104, 166, 80, 167, 72, 147, 25, 117, 121, 7, 131, 110, 160, 103, 129, 158, 52, 49, 30, 148, 154, 85, 123, 134, 77, 16, 69, 40, 133, 106, 175, 73, 45, 33, 196, 67, 114, 119, 34, 28, 157, 153, 100, 181, 31, 13, 137, 81, 86, 58, 180, 141, 192, 164, 89, 39, 184, 183, 1, 136, 99, 15, 94, 113, 198, 195, 173, 138, 93, 139]
 maxVal = Solution: cost=[-4001.0], size=[97], elements=[87, 83, 143, 145, 61, 95, 172, 150, 21, 128, 4, 101, 6, 108, 174, 51, 19, 169, 126, 125, 54, 155, 70, 68, 63, 46, 23, 104, 166, 80, 167, 72, 147, 25, 117, 121, 7, 131, 110, 160, 103, 129, 158, 52, 49, 30, 148, 154, 85, 123, 134, 77, 16, 69, 40, 133, 106, 175, 73, 45, 33, 196, 67, 114, 119, 34, 28, 157, 153, 100, 181, 31, 13, 137, 81, 86, 58, 180, 141, 192, 164, 89, 39, 184, 183, 1, 136, 99, 15, 94, 113, 198, 195, 173, 138, 93, 139]
 construction = -4001.0
Time = 1862.241 seg


Executing GRASP for file: instances/qbf400
Configuration:
 Construction mechanism = Standard
 Alpha = 0.1
 Local Search = First Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-10048.0], size=[177], elements=[89, 83, 254, 277, 266, 186, 364, 324, 49, 157, 103, 354, 363, 291, 349, 4, 228, 209, 30, 19, 166, 63, 340, 82, 320, 230, 215, 68, 94, 5, 32, 233, 133, 323, 124, 397, 17, 193, 190, 195, 9, 156, 1, 183, 331, 237, 125, 86, 16, 56, 260, 146, 38, 299, 28, 327, 394, 289, 74, 131, 76, 208, 154, 78, 347, 69, 335, 251, 218, 99, 20, 328, 236, 387, 139, 224, 182, 150, 101, 96, 221, 365, 274, 114, 192, 285, 88, 21, 332, 312, 174, 356, 288, 85, 211, 306, 351, 165, 43, 113, 160, 177, 263, 47, 80, 201, 110, 384, 389, 196, 53, 325, 158, 92, 70, 134, 121, 155, 216, 148, 301, 104, 72, 247, 111, 77, 50, 51, 145, 227, 24, 381, 119, 371, 25, 259, 219, 179, 81, 357, 132, 167, 18, 338, 265, 162, 163, 107, 45, 66, 138, 348, 292, 361, 309, 385, 303, 137, 164, 200, 393, 220, 386, 95, 223, 144, 61, 87, 184, 398, 93, 380, 261, 378, 141, 126, 395]
(Iter. 8) BestSol = Solution: cost=[-10098.0], size=[191], elements=[117, 49, 313, 316, 31, 108, 195, 315, 21, 363, 306, 208, 237, 289, 36, 7, 72, 56, 184, 230, 87, 32, 69, 397, 196, 166, 358, 6, 80, 349, 251, 341, 320, 157, 228, 152, 361, 146, 174, 38, 250, 151, 127, 84, 147, 161, 170, 76, 311, 290, 205, 236, 339, 162, 348, 30, 67, 37, 114, 371, 45, 94, 259, 121, 362, 263, 97, 381, 88, 312, 309, 387, 368, 262, 260, 292, 63, 264, 190, 17, 323, 272, 332, 28, 273, 244, 125, 347, 351, 103, 215, 1, 209, 374, 193, 124, 4, 282, 163, 201, 143, 92, 101, 331, 378, 233, 304, 248, 126, 168, 61, 219, 328, 154, 325, 22, 229, 330, 211, 173, 11, 43, 99, 148, 232, 159, 85, 65, 285, 95, 110, 70, 383, 243, 398, 119, 66, 5, 247, 395, 240, 249, 239, 93, 376, 301, 175, 245, 51, 223, 158, 155, 327, 34, 145, 107, 227, 375, 342, 111, 25, 359, 165, 19, 141, 366, 18, 252, 54, 394, 73, 156, 169, 160, 177, 47, 134, 9, 123, 277, 294, 385, 338, 62, 179, 380, 153, 254, 214, 293, 329]
(Iter. 17) BestSol = Solution: cost=[-10233.0], size=[182], elements=[31, 206, 316, 108, 382, 49, 84, 277, 313, 230, 67, 152, 6, 122, 159, 236, 119, 53, 330, 201, 373, 87, 17, 1, 262, 348, 229, 263, 368, 38, 239, 372, 136, 125, 57, 253, 327, 289, 267, 225, 80, 94, 177, 143, 14, 245, 354, 153, 381, 10, 232, 284, 224, 189, 312, 247, 114, 286, 52, 385, 15, 278, 339, 296, 7, 100, 121, 43, 166, 282, 47, 371, 300, 20, 328, 369, 48, 325, 259, 246, 30, 190, 158, 393, 274, 241, 341, 16, 389, 332, 148, 291, 398, 62, 378, 77, 299, 288, 215, 342, 270, 96, 169, 65, 273, 271, 154, 85, 160, 2, 323, 275, 82, 396, 93, 248, 290, 83, 226, 231, 387, 293, 196, 24, 192, 258, 146, 27, 309, 138, 124, 70, 126, 211, 145, 22, 384, 168, 285, 244, 11, 395, 350, 329, 133, 301, 56, 383, 376, 92, 95, 303, 250, 155, 170, 23, 235, 140, 54, 73, 99, 345, 377, 265, 157, 394, 147, 102, 179, 334, 333, 91, 134, 25, 113, 58, 198, 228, 227, 111, 184, 251]
(Iter. 37) BestSol = Solution: cost=[-10409.0], size=[182], elements=[254, 159, 210, 289, 53, 386, 69, 66, 312, 183, 162, 77, 385, 244, 236, 355, 331, 119, 263, 285, 38, 243, 84, 156, 277, 328, 232, 224, 165, 98, 28, 193, 342, 373, 1, 359, 14, 67, 382, 57, 35, 354, 293, 168, 163, 34, 374, 360, 101, 166, 245, 260, 240, 399, 327, 114, 153, 211, 206, 372, 125, 124, 235, 332, 229, 376, 297, 294, 247, 301, 155, 97, 5, 138, 286, 364, 150, 79, 95, 16, 148, 49, 158, 134, 93, 23, 316, 371, 394, 196, 352, 387, 24, 357, 239, 25, 233, 395, 17, 30, 154, 111, 265, 262, 3, 80, 179, 107, 381, 323, 290, 99, 157, 167, 195, 147, 230, 227, 307, 348, 264, 304, 54, 63, 56, 160, 47, 272, 182, 383, 50, 11, 220, 274, 177, 219, 259, 390, 82, 365, 258, 339, 296, 139, 136, 96, 103, 368, 145, 70, 174, 85, 309, 278, 251, 378, 319, 91, 170, 306, 21, 110, 187, 325, 192, 356, 151, 215, 393, 92, 398, 199, 276, 76, 349, 380, 169, 275, 287, 41, 266, 109]
(Iter. 96) BestSol = Solution: cost=[-10454.0], size=[182], elements=[35, 328, 53, 203, 108, 66, 312, 162, 165, 236, 232, 371, 210, 187, 244, 159, 40, 289, 385, 386, 148, 155, 56, 296, 339, 211, 263, 139, 51, 383, 229, 97, 16, 154, 373, 379, 171, 182, 286, 251, 304, 46, 69, 360, 285, 208, 306, 100, 81, 183, 119, 23, 80, 49, 287, 357, 368, 25, 147, 95, 121, 158, 342, 4, 378, 110, 166, 17, 11, 85, 393, 125, 196, 157, 377, 272, 5, 323, 366, 317, 240, 88, 28, 253, 273, 114, 195, 303, 132, 352, 101, 293, 146, 76, 193, 348, 10, 168, 94, 380, 341, 276, 226, 327, 1, 281, 18, 47, 325, 99, 62, 309, 156, 258, 265, 177, 259, 250, 300, 370, 332, 326, 30, 86, 397, 20, 234, 288, 292, 277, 172, 387, 107, 246, 290, 356, 54, 124, 174, 329, 111, 398, 63, 160, 163, 192, 152, 22, 260, 235, 61, 220, 93, 335, 200, 227, 198, 190, 73, 65, 215, 178, 19, 230, 3, 91, 64, 247, 191, 369, 333, 269, 316, 122, 284, 92, 249, 351, 354, 21, 381, 338]
(Iter. 132) BestSol = Solution: cost=[-10465.0], size=[180], elements=[19, 6, 4, 117, 383, 145, 68, 266, 284, 58, 155, 31, 237, 21, 73, 354, 363, 347, 316, 17, 365, 338, 175, 53, 160, 157, 312, 16, 30, 218, 306, 114, 177, 208, 288, 69, 196, 105, 110, 381, 251, 195, 7, 56, 125, 154, 230, 49, 228, 1, 123, 134, 83, 103, 389, 328, 166, 158, 144, 250, 253, 264, 72, 323, 5, 92, 247, 299, 236, 70, 384, 78, 121, 329, 51, 274, 99, 387, 211, 148, 216, 311, 349, 290, 25, 357, 289, 132, 319, 332, 124, 80, 85, 368, 327, 32, 352, 252, 18, 190, 215, 170, 398, 131, 107, 179, 137, 227, 260, 27, 79, 265, 199, 259, 273, 65, 244, 97, 142, 183, 192, 285, 275, 397, 63, 164, 115, 93, 229, 100, 2, 300, 371, 173, 224, 167, 45, 174, 159, 88, 348, 153, 38, 320, 378, 156, 62, 385, 163, 102, 239, 162, 143, 87, 128, 245, 339, 395, 209, 119, 240, 89, 139, 219, 309, 231, 377, 101, 66, 276, 262, 165, 94, 394, 258, 358, 315, 351, 168, 41]
(Iter. 147) BestSol = Solution: cost=[-11004.0], size=[186], elements=[260, 168, 362, 157, 254, 312, 235, 352, 61, 232, 290, 364, 244, 49, 292, 211, 124, 320, 397, 97, 159, 273, 192, 354, 83, 17, 88, 332, 66, 227, 110, 28, 373, 21, 195, 323, 243, 285, 95, 98, 272, 69, 101, 38, 267, 324, 374, 263, 80, 147, 134, 162, 114, 11, 371, 230, 386, 348, 248, 158, 76, 385, 148, 10, 30, 154, 274, 240, 289, 205, 156, 14, 387, 339, 229, 166, 56, 236, 311, 85, 16, 73, 165, 99, 122, 27, 63, 174, 152, 84, 288, 208, 15, 67, 108, 394, 51, 300, 94, 383, 22, 75, 189, 349, 146, 309, 251, 277, 250, 190, 103, 132, 193, 259, 247, 155, 328, 327, 233, 363, 325, 228, 119, 219, 93, 82, 187, 96, 265, 100, 23, 307, 201, 196, 296, 306, 177, 151, 92, 301, 342, 316, 395, 87, 170, 45, 54, 378, 269, 160, 18, 125, 142, 183, 4, 145, 372, 224, 245, 382, 246, 143, 47, 163, 376, 200, 338, 102, 153, 34, 239, 43, 175, 40, 252, 127, 390, 204, 347, 279, 226, 111, 361, 294, 3, 351]
 maxVal = Solution: cost=[-11004.0], size=[186], elements=[260, 168, 362, 157, 254, 312, 235, 352, 61, 232, 290, 364, 244, 49, 292, 211, 124, 320, 397, 97, 159, 273, 192, 354, 83, 17, 88, 332, 66, 227, 110, 28, 373, 21, 195, 323, 243, 285, 95, 98, 272, 69, 101, 38, 267, 324, 374, 263, 80, 147, 134, 162, 114, 11, 371, 230, 386, 348, 248, 158, 76, 385, 148, 10, 30, 154, 274, 240, 289, 205, 156, 14, 387, 339, 229, 166, 56, 236, 311, 85, 16, 73, 165, 99, 122, 27, 63, 174, 152, 84, 288, 208, 15, 67, 108, 394, 51, 300, 94, 383, 22, 75, 189, 349, 146, 309, 251, 277, 250, 190, 103, 132, 193, 259, 247, 155, 328, 327, 233, 363, 325, 228, 119, 219, 93, 82, 187, 96, 265, 100, 23, 307, 201, 196, 296, 306, 177, 151, 92, 301, 342, 316, 395, 87, 170, 45, 54, 378, 269, 160, 18, 125, 142, 183, 4, 145, 372, 224, 245, 382, 246, 143, 47, 163, 376, 200, 338, 102, 153, 34, 239, 43, 175, 40, 252, 127, 390, 204, 347, 279, 226, 111, 361, 294, 3, 351]
 construction = -11004.0
Time = 1860.714 seg


Tempo execução todos arquivos: 13023.06seg 
-----------------------------------------------------