Executing GRASP for file: instances/qbf020
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = Best Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-99.0], size=[9], elements=[17, 5, 4, 14, 9, 1, 8, 0, 12]
(Iter. 3) BestSol = Solution: cost=[-120.0], size=[10], elements=[4, 2, 14, 12, 16, 9, 18, 0, 1, 8]
 maxVal = Solution: cost=[-120.0], size=[10], elements=[4, 2, 14, 12, 16, 9, 18, 0, 1, 8]
 construction = -102.0
Time = 1860.044 seg


Executing GRASP for file: instances/qbf040
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = Best Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-253.0], size=[17], elements=[37, 1, 24, 19, 25, 34, 7, 28, 21, 31, 12, 11, 2, 3, 15, 33, 35]
(Iter. 3) BestSol = Solution: cost=[-301.0], size=[19], elements=[14, 32, 22, 17, 3, 36, 1, 23, 4, 11, 9, 0, 21, 2, 15, 31, 7, 34, 25]
(Iter. 6) BestSol = Solution: cost=[-318.0], size=[18], elements=[1, 24, 7, 25, 3, 19, 2, 31, 36, 14, 18, 23, 34, 11, 9, 21, 4, 15]
(Iter. 62) BestSol = Solution: cost=[-328.0], size=[19], elements=[24, 1, 25, 19, 7, 2, 3, 21, 14, 18, 31, 36, 11, 4, 23, 9, 34, 15, 33]
 maxVal = Solution: cost=[-328.0], size=[19], elements=[24, 1, 25, 19, 7, 2, 3, 21, 14, 18, 31, 36, 11, 4, 23, 9, 34, 15, 33]
 construction = -304.0
Time = 1860.011 seg


Executing GRASP for file: instances/qbf060
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = Best Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-435.0], size=[26], elements=[18, 44, 0, 11, 45, 33, 2, 20, 24, 29, 27, 30, 17, 14, 42, 52, 53, 4, 1, 23, 56, 28, 38, 32, 26, 35]
(Iter. 3) BestSol = Solution: cost=[-470.0], size=[27], elements=[28, 3, 17, 40, 26, 44, 38, 49, 11, 16, 42, 34, 21, 56, 51, 4, 55, 30, 12, 41, 29, 24, 35, 53, 59, 14, 46]
(Iter. 4) BestSol = Solution: cost=[-478.0], size=[28], elements=[28, 3, 17, 16, 11, 38, 34, 26, 49, 44, 41, 24, 45, 4, 21, 30, 22, 46, 27, 51, 29, 35, 53, 55, 59, 42, 23, 14]
(Iter. 11) BestSol = Solution: cost=[-480.0], size=[28], elements=[13, 42, 44, 56, 14, 53, 17, 51, 29, 27, 43, 24, 38, 31, 34, 49, 3, 26, 4, 35, 59, 23, 55, 28, 16, 11, 37, 50]
(Iter. 28) BestSol = Solution: cost=[-482.0], size=[23], elements=[13, 42, 44, 17, 14, 53, 29, 56, 51, 27, 35, 24, 4, 49, 30, 26, 32, 38, 2, 59, 55, 7, 12]
(Iter. 38) BestSol = Solution: cost=[-490.0], size=[28], elements=[28, 3, 17, 16, 11, 34, 49, 26, 38, 44, 42, 24, 41, 21, 30, 4, 56, 51, 29, 46, 22, 53, 55, 35, 59, 23, 45, 14]
(Iter. 79) BestSol = Solution: cost=[-500.0], size=[27], elements=[44, 11, 45, 33, 16, 27, 24, 3, 28, 17, 26, 38, 49, 34, 51, 12, 42, 14, 53, 59, 4, 2, 56, 55, 30, 29, 35]
 maxVal = Solution: cost=[-500.0], size=[27], elements=[44, 11, 45, 33, 16, 27, 24, 3, 28, 17, 26, 38, 49, 34, 51, 12, 42, 14, 53, 59, 4, 2, 56, 55, 30, 29, 35]
 construction = -489.0
Time = 1860.004 seg


Executing GRASP for file: instances/qbf080
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = Best Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-718.0], size=[33], elements=[20, 3, 53, 49, 36, 31, 7, 15, 50, 38, 14, 8, 61, 21, 60, 4, 18, 69, 44, 54, 2, 37, 6, 48, 47, 34, 62, 43, 1, 32, 71, 19, 64]
(Iter. 5) BestSol = Solution: cost=[-725.0], size=[33], elements=[1, 33, 62, 64, 2, 37, 73, 71, 47, 49, 74, 63, 76, 75, 24, 55, 43, 72, 18, 42, 44, 58, 51, 13, 7, 54, 52, 46, 31, 48, 57, 70, 9]
(Iter. 6) BestSol = Solution: cost=[-753.0], size=[32], elements=[1, 62, 64, 2, 37, 73, 71, 47, 49, 74, 55, 76, 75, 24, 3, 50, 52, 18, 7, 42, 4, 54, 69, 61, 44, 51, 13, 36, 32, 67, 60, 8]
(Iter. 7) BestSol = Solution: cost=[-801.0], size=[34], elements=[48, 23, 37, 2, 29, 64, 46, 62, 18, 19, 71, 58, 12, 9, 31, 75, 43, 42, 54, 1, 3, 24, 70, 69, 60, 13, 73, 4, 27, 22, 57, 5, 65, 11]
(Iter. 49) BestSol = Solution: cost=[-830.0], size=[36], elements=[23, 48, 37, 2, 36, 62, 18, 47, 19, 71, 64, 46, 58, 31, 75, 9, 42, 3, 54, 1, 60, 13, 73, 7, 24, 74, 76, 22, 49, 4, 44, 51, 70, 8, 43, 55]
(Iter. 59) BestSol = Solution: cost=[-837.0], size=[36], elements=[23, 48, 37, 60, 36, 2, 18, 54, 31, 13, 3, 7, 42, 58, 75, 9, 73, 71, 46, 69, 24, 44, 70, 76, 19, 62, 64, 1, 74, 49, 22, 4, 51, 57, 43, 55]
(Iter. 209) BestSol = Solution: cost=[-843.0], size=[37], elements=[23, 48, 37, 36, 2, 31, 62, 18, 54, 75, 3, 7, 42, 13, 73, 71, 9, 60, 46, 19, 58, 24, 69, 64, 44, 76, 43, 1, 70, 74, 22, 4, 51, 49, 55, 61, 8]
 maxVal = Solution: cost=[-843.0], size=[37], elements=[23, 48, 37, 36, 2, 31, 62, 18, 54, 75, 3, 7, 42, 13, 73, 71, 9, 60, 46, 19, 58, 24, 69, 64, 44, 76, 43, 1, 70, 74, 22, 4, 51, 49, 55, 61, 8]
 construction = -842.0
Time = 1860.002 seg


Executing GRASP for file: instances/qbf100
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = Best Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-1071.0], size=[43], elements=[11, 68, 57, 38, 74, 22, 49, 30, 80, 24, 23, 10, 21, 62, 47, 95, 44, 91, 93, 29, 7, 39, 63, 82, 14, 3, 18, 71, 15, 84, 2, 66, 89, 51, 16, 81, 64, 69, 56, 25, 77, 86, 28]
(Iter. 3) BestSol = Solution: cost=[-1094.0], size=[44], elements=[53, 21, 11, 83, 77, 74, 64, 10, 33, 71, 34, 96, 25, 24, 69, 38, 42, 18, 19, 45, 3, 78, 23, 90, 62, 89, 57, 51, 28, 14, 17, 39, 2, 29, 85, 61, 44, 84, 79, 94, 81, 86, 91, 56]
(Iter. 4) BestSol = Solution: cost=[-1110.0], size=[43], elements=[97, 51, 9, 23, 70, 2, 61, 48, 4, 79, 12, 34, 72, 45, 85, 16, 10, 92, 19, 84, 68, 67, 44, 63, 17, 94, 73, 58, 20, 5, 15, 56, 62, 29, 90, 40, 18, 71, 96, 33, 42, 25, 28]
(Iter. 13) BestSol = Solution: cost=[-1125.0], size=[44], elements=[43, 68, 11, 57, 38, 74, 22, 49, 78, 56, 51, 23, 10, 24, 62, 21, 95, 27, 33, 3, 31, 52, 89, 18, 81, 44, 7, 93, 14, 71, 64, 63, 69, 17, 2, 19, 25, 28, 83, 86, 77, 45, 55, 99]
(Iter. 20) BestSol = Solution: cost=[-1177.0], size=[45], elements=[20, 92, 0, 13, 45, 61, 69, 94, 67, 16, 71, 9, 2, 84, 10, 79, 23, 21, 73, 15, 91, 44, 72, 96, 74, 33, 8, 6, 50, 14, 85, 98, 17, 75, 63, 22, 55, 5, 62, 29, 48, 68, 12, 59, 43]
(Iter. 46) BestSol = Solution: cost=[-1190.0], size=[44], elements=[68, 11, 57, 43, 56, 22, 38, 74, 26, 62, 78, 23, 51, 10, 64, 24, 95, 17, 7, 31, 90, 28, 70, 86, 44, 33, 81, 18, 14, 34, 40, 2, 29, 96, 91, 63, 25, 93, 71, 72, 87, 49, 19, 27]
(Iter. 78) BestSol = Solution: cost=[-1213.0], size=[46], elements=[40, 84, 58, 85, 73, 51, 2, 16, 56, 19, 17, 68, 61, 33, 25, 34, 23, 10, 18, 29, 63, 7, 44, 42, 28, 62, 45, 90, 22, 86, 14, 24, 38, 64, 69, 71, 96, 78, 72, 67, 91, 20, 79, 57, 92, 50]
(Iter. 133) BestSol = Solution: cost=[-1248.0], size=[46], elements=[2, 27, 94, 84, 22, 26, 95, 44, 23, 10, 18, 62, 93, 33, 29, 7, 17, 96, 63, 51, 74, 38, 68, 56, 91, 57, 69, 86, 14, 78, 61, 3, 81, 89, 64, 34, 43, 19, 11, 83, 71, 90, 24, 31, 25, 28]
(Iter. 2624) BestSol = Solution: cost=[-1262.0], size=[49], elements=[40, 23, 2, 7, 18, 10, 44, 84, 45, 73, 42, 20, 96, 34, 71, 33, 69, 94, 19, 92, 16, 9, 90, 85, 29, 63, 62, 17, 61, 51, 64, 78, 14, 22, 74, 57, 38, 56, 67, 68, 50, 72, 25, 79, 28, 86, 91, 81, 24]
(Iter. 47257) BestSol = Solution: cost=[-1263.0], size=[46], elements=[61, 84, 2, 85, 44, 18, 19, 42, 17, 7, 10, 96, 63, 25, 20, 33, 14, 68, 51, 29, 16, 34, 73, 23, 28, 45, 62, 79, 74, 71, 72, 90, 78, 22, 64, 86, 91, 69, 38, 50, 57, 56, 67, 9, 92, 94]
 maxVal = Solution: cost=[-1263.0], size=[46], elements=[61, 84, 2, 85, 44, 18, 19, 42, 17, 7, 10, 96, 63, 25, 20, 33, 14, 68, 51, 29, 16, 34, 73, 23, 28, 45, 62, 79, 74, 71, 72, 90, 78, 22, 64, 86, 91, 69, 38, 50, 57, 56, 67, 9, 92, 94]
 construction = -1260.0
Time = 1860.015 seg


Executing GRASP for file: instances/qbf200
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = Best Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-3491.0], size=[89], elements=[5, 154, 125, 4, 169, 6, 19, 114, 30, 1, 148, 160, 106, 117, 69, 166, 119, 49, 99, 31, 127, 76, 67, 51, 163, 161, 171, 162, 152, 84, 105, 11, 85, 143, 65, 174, 12, 62, 87, 81, 7, 157, 176, 168, 52, 132, 100, 133, 131, 80, 153, 108, 181, 124, 101, 189, 56, 72, 21, 70, 138, 179, 145, 34, 150, 147, 185, 41, 141, 25, 32, 66, 45, 9, 172, 164, 95, 180, 94, 112, 90, 8, 139, 42, 188, 149, 88, 159, 110]
(Iter. 4) BestSol = Solution: cost=[-3789.0], size=[89], elements=[117, 4, 6, 125, 19, 143, 145, 114, 169, 160, 1, 52, 106, 54, 30, 148, 25, 51, 21, 69, 166, 67, 123, 167, 108, 174, 70, 141, 85, 7, 12, 95, 11, 162, 155, 179, 153, 104, 81, 131, 161, 84, 119, 100, 80, 87, 34, 129, 171, 90, 16, 99, 49, 127, 152, 111, 157, 56, 154, 31, 192, 121, 184, 147, 23, 58, 33, 77, 94, 8, 15, 185, 45, 138, 140, 172, 158, 175, 13, 196, 41, 126, 92, 170, 46, 73, 39, 61, 47]
(Iter. 8) BestSol = Solution: cost=[-3896.0], size=[89], elements=[68, 180, 172, 104, 63, 17, 174, 157, 31, 145, 7, 81, 179, 167, 52, 54, 133, 108, 131, 80, 70, 155, 21, 25, 51, 117, 138, 72, 86, 4, 30, 16, 106, 85, 160, 69, 12, 148, 87, 132, 141, 100, 129, 34, 185, 181, 33, 171, 150, 119, 1, 154, 23, 29, 83, 9, 45, 153, 164, 50, 192, 114, 73, 77, 166, 19, 125, 8, 101, 158, 165, 47, 147, 61, 110, 196, 92, 175, 0, 41, 103, 67, 13, 39, 15, 28, 144, 53, 89]
(Iter. 46) BestSol = Solution: cost=[-3908.0], size=[92], elements=[117, 4, 6, 21, 67, 145, 19, 68, 155, 31, 108, 58, 125, 16, 49, 121, 143, 175, 140, 110, 173, 93, 126, 61, 30, 54, 147, 95, 137, 13, 48, 101, 63, 83, 166, 157, 196, 87, 174, 103, 154, 25, 34, 167, 184, 43, 23, 172, 141, 7, 72, 51, 129, 114, 73, 46, 85, 69, 193, 99, 195, 80, 131, 66, 45, 106, 70, 44, 138, 198, 134, 86, 37, 94, 160, 169, 33, 123, 192, 1, 81, 158, 181, 9, 113, 136, 133, 89, 128, 139, 40, 15]
(Iter. 613) BestSol = Solution: cost=[-3936.0], size=[94], elements=[83, 87, 172, 61, 101, 95, 110, 145, 21, 4, 174, 108, 85, 19, 191, 34, 126, 63, 124, 54, 155, 70, 68, 17, 104, 138, 51, 158, 80, 11, 133, 25, 30, 12, 43, 131, 52, 86, 16, 160, 106, 119, 81, 45, 114, 7, 179, 117, 125, 181, 100, 154, 31, 121, 123, 76, 69, 157, 148, 99, 49, 166, 56, 175, 23, 171, 196, 195, 184, 147, 13, 192, 141, 67, 47, 115, 140, 26, 15, 143, 122, 1, 8, 153, 88, 170, 132, 93, 29, 37, 38, 190, 198, 94]
(Iter. 809) BestSol = Solution: cost=[-3951.0], size=[90], elements=[172, 180, 68, 17, 63, 61, 157, 138, 83, 145, 31, 72, 150, 33, 51, 174, 21, 4, 80, 108, 147, 124, 16, 155, 54, 86, 30, 81, 106, 160, 85, 87, 95, 162, 101, 25, 45, 52, 198, 137, 132, 141, 131, 115, 19, 192, 119, 67, 23, 166, 99, 69, 148, 154, 70, 49, 7, 134, 123, 158, 129, 9, 152, 121, 110, 183, 100, 66, 34, 165, 181, 117, 171, 195, 175, 56, 140, 8, 29, 196, 111, 37, 93, 173, 170, 40, 163, 28, 125, 153]
(Iter. 2499) BestSol = Solution: cost=[-3970.0], size=[97], elements=[108, 61, 67, 17, 167, 69, 184, 145, 23, 141, 137, 4, 103, 166, 157, 99, 63, 49, 121, 19, 31, 155, 119, 100, 46, 34, 183, 110, 80, 196, 187, 72, 70, 174, 89, 43, 83, 85, 138, 86, 106, 51, 148, 30, 25, 169, 154, 134, 101, 158, 175, 147, 95, 45, 87, 172, 114, 33, 160, 81, 16, 21, 73, 115, 195, 198, 123, 173, 37, 52, 7, 117, 171, 131, 192, 104, 133, 54, 68, 1, 113, 125, 126, 181, 18, 9, 136, 94, 20, 13, 93, 190, 143, 39, 26, 15, 180]
(Iter. 2942) BestSol = Solution: cost=[-3986.0], size=[88], elements=[89, 31, 49, 179, 157, 196, 69, 72, 110, 184, 195, 7, 192, 172, 117, 145, 66, 61, 171, 80, 155, 121, 70, 193, 131, 104, 137, 138, 141, 106, 85, 4, 21, 86, 101, 83, 198, 82, 148, 99, 166, 51, 43, 167, 23, 54, 183, 42, 81, 147, 119, 34, 95, 84, 87, 111, 17, 37, 94, 162, 127, 114, 174, 19, 30, 67, 124, 45, 11, 52, 25, 160, 33, 169, 156, 134, 154, 158, 123, 9, 18, 20, 181, 125, 113, 15, 152, 190]
 maxVal = Solution: cost=[-3986.0], size=[88], elements=[89, 31, 49, 179, 157, 196, 69, 72, 110, 184, 195, 7, 192, 172, 117, 145, 66, 61, 171, 80, 155, 121, 70, 193, 131, 104, 137, 138, 141, 106, 85, 4, 21, 86, 101, 83, 198, 82, 148, 99, 166, 51, 43, 167, 23, 54, 183, 42, 81, 147, 119, 34, 95, 84, 87, 111, 17, 37, 94, 162, 127, 114, 174, 19, 30, 67, 124, 45, 11, 52, 25, 160, 33, 169, 156, 134, 154, 158, 123, 9, 18, 20, 181, 125, 113, 15, 152, 190]
 construction = -3975.0
Time = 1878.06 seg


Executing GRASP for file: instances/qbf400
Configuration:
 Construction mechanism = Standard
 Alpha = 0.05
 Local Search = Best Improving
 Stop Criterion = 30 minutes
Execution:
(Iter. 2) BestSol = Solution: cost=[-9288.0], size=[167], elements=[328, 180, 104, 247, 355, 252, 123, 227, 338, 19, 353, 143, 125, 0, 190, 209, 52, 213, 241, 300, 187, 374, 139, 359, 261, 16, 340, 103, 291, 99, 1, 324, 327, 332, 183, 225, 78, 155, 100, 218, 131, 312, 299, 233, 295, 113, 376, 111, 334, 70, 148, 246, 301, 223, 197, 153, 97, 196, 245, 201, 390, 298, 94, 30, 296, 288, 134, 177, 364, 284, 365, 166, 383, 293, 235, 219, 140, 316, 160, 382, 18, 354, 119, 25, 399, 381, 167, 41, 240, 124, 326, 318, 335, 76, 309, 174, 333, 269, 307, 141, 122, 336, 7, 304, 250, 10, 132, 15, 270, 220, 44, 158, 154, 357, 264, 208, 237, 47, 51, 323, 65, 216, 9, 50, 380, 350, 68, 73, 129, 179, 215, 290, 347, 398, 145, 221, 21, 24, 389, 107, 31, 49, 61, 283, 320, 325, 4, 135, 157, 356, 86, 95, 63, 164, 294, 391, 173, 168, 248, 72, 375, 162, 38, 289, 80, 102, 217]
(Iter. 3) BestSol = Solution: cost=[-9508.0], size=[174], elements=[180, 104, 247, 328, 373, 21, 50, 150, 192, 139, 388, 327, 24, 117, 120, 164, 178, 86, 304, 386, 218, 278, 202, 288, 52, 129, 336, 51, 350, 296, 167, 87, 119, 111, 131, 107, 145, 155, 77, 25, 54, 183, 298, 58, 133, 30, 284, 68, 245, 355, 354, 289, 366, 277, 385, 224, 324, 235, 78, 32, 16, 162, 382, 124, 299, 41, 211, 227, 241, 81, 231, 398, 53, 369, 48, 393, 1, 381, 57, 114, 222, 125, 300, 136, 3, 291, 200, 64, 10, 154, 387, 9, 148, 20, 239, 7, 223, 325, 295, 312, 339, 44, 246, 259, 15, 250, 95, 306, 70, 123, 18, 286, 236, 127, 84, 91, 220, 316, 160, 187, 258, 156, 99, 80, 301, 134, 94, 290, 174, 122, 103, 121, 352, 338, 101, 390, 265, 165, 230, 326, 323, 11, 168, 166, 65, 380, 73, 320, 293, 195, 221, 193, 157, 272, 356, 130, 159, 67, 253, 147, 364, 372, 173, 342, 106, 309, 244, 248, 389, 383, 152, 274, 75, 234]
(Iter. 4) BestSol = Solution: cost=[-10425.0], size=[185], elements=[233, 82, 260, 230, 382, 168, 116, 307, 205, 112, 371, 264, 240, 204, 0, 295, 332, 290, 157, 14, 45, 76, 364, 94, 196, 174, 49, 67, 84, 17, 221, 363, 320, 95, 189, 273, 44, 349, 70, 380, 226, 301, 225, 151, 374, 97, 155, 100, 284, 289, 147, 161, 269, 143, 323, 125, 80, 342, 166, 236, 368, 378, 63, 393, 381, 291, 154, 38, 11, 339, 83, 85, 195, 325, 312, 108, 7, 397, 31, 16, 177, 208, 110, 56, 329, 1, 220, 145, 246, 182, 148, 51, 171, 69, 311, 165, 99, 251, 132, 141, 383, 179, 357, 223, 253, 4, 272, 193, 114, 350, 152, 9, 327, 303, 309, 215, 62, 88, 192, 328, 66, 373, 96, 390, 18, 160, 139, 385, 54, 278, 248, 211, 127, 306, 119, 384, 134, 101, 124, 183, 285, 156, 324, 387, 297, 277, 207, 158, 276, 25, 316, 293, 331, 334, 258, 274, 47, 247, 294, 376, 239, 153, 359, 259, 77, 224, 34, 227, 326, 351, 229, 126, 5, 190, 366, 287, 360, 279, 249, 194, 123, 389, 209, 197, 379]
(Iter. 11) BestSol = Solution: cost=[-10628.0], size=[171], elements=[91, 230, 87, 84, 316, 262, 211, 155, 247, 92, 307, 70, 231, 289, 154, 299, 365, 201, 253, 18, 387, 336, 85, 10, 174, 288, 158, 95, 83, 101, 352, 200, 134, 265, 30, 239, 376, 393, 124, 332, 78, 25, 274, 354, 293, 216, 159, 100, 113, 103, 219, 48, 17, 1, 228, 67, 167, 373, 333, 245, 53, 16, 125, 381, 114, 240, 368, 119, 28, 300, 327, 324, 65, 323, 371, 162, 21, 148, 328, 291, 229, 49, 277, 150, 121, 339, 263, 385, 166, 296, 43, 24, 190, 9, 224, 246, 389, 15, 236, 241, 82, 47, 4, 77, 94, 20, 157, 369, 378, 136, 7, 51, 177, 396, 226, 122, 205, 304, 80, 99, 325, 111, 98, 258, 342, 156, 259, 397, 183, 195, 165, 366, 187, 394, 73, 364, 63, 349, 372, 3, 221, 301, 133, 386, 64, 152, 151, 309, 139, 132, 310, 390, 232, 68, 54, 223, 104, 50, 383, 179, 11, 264, 382, 395, 61, 145, 102, 377, 351, 140, 306]
(Iter. 30) BestSol = Solution: cost=[-10796.0], size=[186], elements=[184, 108, 66, 141, 167, 23, 43, 166, 74, 289, 383, 155, 235, 390, 293, 373, 376, 54, 92, 101, 49, 129, 385, 253, 158, 371, 279, 70, 347, 335, 200, 378, 393, 377, 5, 9, 18, 154, 326, 211, 216, 75, 84, 288, 244, 368, 307, 231, 366, 240, 380, 1, 25, 247, 354, 148, 125, 30, 361, 352, 17, 177, 274, 323, 396, 16, 265, 332, 10, 230, 159, 114, 386, 239, 73, 327, 50, 263, 113, 229, 389, 367, 100, 285, 51, 82, 21, 89, 80, 179, 119, 277, 350, 136, 20, 296, 336, 7, 110, 306, 157, 360, 87, 126, 85, 4, 58, 83, 95, 65, 291, 328, 192, 103, 196, 250, 72, 28, 147, 324, 224, 384, 88, 97, 312, 162, 303, 246, 19, 137, 62, 34, 94, 139, 309, 29, 143, 342, 236, 193, 111, 183, 325, 228, 99, 195, 172, 234, 8, 232, 138, 24, 63, 348, 156, 266, 132, 370, 81, 382, 168, 391, 381, 22, 215, 146, 351, 53, 134, 310, 164, 133, 227, 191, 91, 225, 259, 178, 190, 398, 107, 171, 38, 145, 338, 123]
(Iter. 40) BestSol = Solution: cost=[-10815.0], size=[192], elements=[355, 286, 277, 331, 244, 345, 290, 385, 232, 16, 168, 24, 263, 387, 75, 49, 352, 224, 366, 101, 373, 274, 289, 354, 293, 235, 54, 347, 248, 278, 154, 125, 386, 158, 192, 211, 114, 194, 250, 328, 147, 234, 97, 304, 272, 95, 134, 174, 11, 383, 17, 69, 369, 146, 30, 371, 92, 288, 99, 94, 323, 299, 316, 384, 376, 390, 56, 247, 296, 196, 245, 227, 57, 265, 3, 148, 124, 200, 85, 195, 83, 111, 44, 374, 166, 338, 230, 273, 318, 342, 397, 181, 47, 165, 398, 256, 122, 51, 7, 15, 10, 48, 336, 153, 119, 63, 285, 172, 107, 38, 284, 65, 162, 335, 372, 159, 236, 177, 208, 34, 246, 240, 18, 100, 300, 113, 223, 9, 2, 66, 360, 81, 219, 364, 155, 22, 324, 309, 82, 140, 393, 156, 292, 121, 23, 339, 356, 62, 80, 110, 259, 183, 87, 145, 325, 215, 349, 220, 382, 362, 108, 88, 378, 93, 258, 239, 381, 170, 160, 127, 1, 329, 306, 152, 151, 43, 226, 184, 254, 281, 76, 41, 179, 253, 251, 287, 260, 84, 320, 380, 96, 182]
 maxVal = Solution: cost=[-10815.0], size=[192], elements=[355, 286, 277, 331, 244, 345, 290, 385, 232, 16, 168, 24, 263, 387, 75, 49, 352, 224, 366, 101, 373, 274, 289, 354, 293, 235, 54, 347, 248, 278, 154, 125, 386, 158, 192, 211, 114, 194, 250, 328, 147, 234, 97, 304, 272, 95, 134, 174, 11, 383, 17, 69, 369, 146, 30, 371, 92, 288, 99, 94, 323, 299, 316, 384, 376, 390, 56, 247, 296, 196, 245, 227, 57, 265, 3, 148, 124, 200, 85, 195, 83, 111, 44, 374, 166, 338, 230, 273, 318, 342, 397, 181, 47, 165, 398, 256, 122, 51, 7, 15, 10, 48, 336, 153, 119, 63, 285, 172, 107, 38, 284, 65, 162, 335, 372, 159, 236, 177, 208, 34, 246, 240, 18, 100, 300, 113, 223, 9, 2, 66, 360, 81, 219, 364, 155, 22, 324, 309, 82, 140, 393, 156, 292, 121, 23, 339, 356, 62, 80, 110, 259, 183, 87, 145, 325, 215, 349, 220, 382, 362, 108, 88, 378, 93, 258, 239, 381, 170, 160, 127, 1, 329, 306, 152, 151, 43, 226, 184, 254, 281, 76, 41, 179, 253, 251, 287, 260, 84, 320, 380, 96, 182]
 construction = -10679.0
Time = 1864.078 seg


Tempo execução todos arquivos: 13042.234seg 
-----------------------------------------------------